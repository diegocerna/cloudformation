{
  "AWSTemplateFormatVersion": "2010-09-09",

    "Description" : "This template generate a STAMP's VPC. - filename: vpc.stackid.novpn.template",

  "Parameters" : {

    "AllocationIdBastion": {
      "Type": "String",
      "Description": "AllocationId of existing Elastic IP (EIP) in your Virtual Private Cloud (VPC)",
      "Default" : "eipalloc-"
    },

    "StackID" : {
      "Type" : "String",
      "Description" : "Stack ID name",
      "Default" : "-"
    },

    "AllocationIdNAT": {
      "Type": "String",
      "Description": "AllocationId of existing Elastic IP (EIP) in your Virtual Private Cloud (VPC)",
      "Default" : "eipalloc-"
    },

    "Version" : {
      "Type" : "String",
      "Description" : "stamp1 for current version, stamp2 for new version"
    },

    "Environment" : {
      "Type" : "String",
      "Description" : "Tag the environment, like development, production, etc."
    }
  },
  "Mappings" : {

    "NATMap" : {
      "us-east-1"           : { "AMI" : "ami-ad227cc4" },
      "us-west-1"           : { "AMI" : "ami-d69aad93" },
      "us-west-2"           : { "AMI" : "ami-f032acc0" },
      "sa-east-1"           : { "AMI" : "ami-d78325ca" },
      "ap-southeast-2"      : { "AMI" : "ami-3bae3201" },
      "eu-west-1"           : { "AMI" : "ami-f3e30084" }
    },

    "keys" : {
          "Dev"            : { "keypair" : "stamp-dev"},
          "Qa"             : { "keypair" : "stamp-qa" },
          "Sandbox"        : { "keypair" : "stamp-sandbox"},
          "Production"     : { "keypair" : "stamp-prod"}
    },

    "subnets" : {
      "stamp1"                : { "VPCSN" : "10.10.0.0/16", "PUBLICSN" : "10.10.21.0/24", "PRIVATESN" : "10.10.22.0/23", "MANAGESN" : "10.10.82.0/24", "MANAGESN2" : "10.10.83.0/24", "WORKERSN1" : "10.10.24.0/27", "WORKERSN2" : "10.10.24.32/27", "WORKERSN3" : "10.10.24.64/27", "WORKERSN4" : "10.10.24.96/27", "WORKERSN5" : "10.10.24.128/27", "WORKERSN6" : "10.10.24.160/27", "WORKERSN7" : "10.10.24.192/27", "DBSN" : "10.10.3.0/24", "DBSN2" : "10.10.4.0/24", "PUBLICSN2" : "10.10.51.0/24", "PRIVATESN2" : "10.10.52.0/23", "WORKERSN101" : "10.10.54.0/27", "WORKERSN102" : "10.10.54.32/27", "WORKERSN103" : "10.10.54.64/27", "WORKERSN104" : "10.10.54.96/27", "WORKERSN105" : "10.10.54.128/27", "WORKERSN106" : "10.10.54.160/27", "WORKERSN107" : "10.10.54.192/27" },
      "stamp2"                : { "VPCSN" : "10.11.0.0/16", "PUBLICSN" : "10.11.21.0/24", "PRIVATESN" : "10.11.22.0/23", "MANAGESN" : "10.11.82.0/24", "MANAGESN2" : "10.11.83.0/24", "WORKERSN1" : "10.11.24.0/27", "WORKERSN2" : "10.11.24.32/27", "WORKERSN3" : "10.11.24.64/27", "WORKERSN4" : "10.11.24.96/27", "WORKERSN5" : "10.11.24.128/27", "WORKERSN6" : "10.11.24.160/27", "WORKERSN7" : "10.11.24.192/27", "DBSN" : "10.11.3.0/24", "DBSN2" : "10.11.4.0/24", "PUBLICSN2" : "10.11.51.0/24", "PRIVATESN2" : "10.11.52.0/23", "WORKERSN101" : "10.11.54.0/27", "WORKERSN102" : "10.11.54.32/27", "WORKERSN103" : "10.11.54.64/27", "WORKERSN104" : "10.11.54.96/27", "WORKERSN105" : "10.11.54.128/27", "WORKERSN106" : "10.11.54.160/27", "WORKERSN107" : "10.11.54.192/27" }

    },

    "dot" : {
      "Dev"                : { "DOT" : ".dev" },
      "Qa"                 : { "DOT" : ".qa" },
      "Sandbox"            : { "DOT" : ".sandbox" },
      "Production"         : { "DOT" : "" }
    },

    "KernelId" : {
      "us-east-1"          : { "AKI" : "aki-919dcaf8" },
      "us-west-1"          : { "AKI" : "aki-880531cd" },
      "us-west-2"          : { "AKI" : "aki-fc8f11cc" },
      "sa-east-1"          : { "AKI" : "aki-5553f448" },
      "ap-southeast-2"     : { "AKI" : "aki-c362fff9" },
      "eu-west-1"          : { "AKI" : "aki-52a34525" }
    },

    "subnetZone1" : {
      "us-east-1"          : { "ZONE" : "us-east-1a" },
      "us-west-1"          : { "ZONE" : "us-west-1c" },
      "us-west-2"          : { "ZONE" : "us-west-2c" },
      "eu-west-1"          : { "ZONE" : "eu-west-1a" },
      "ap-southeast-1"     : { "ZONE" : "ap-southeast-1a" },
      "ap-northeast-1"     : { "ZONE" : "ap-northeast-1a" },
      "ap-southeast-2"     : { "ZONE" : "ap-southeast-2a" },
      "sa-east-1"          : { "ZONE" : "sa-east-1a" }
    },

    "subnetZone2" : {
      "us-east-1"          : { "ZONE" : "us-east-1b" },
      "us-west-1"          : { "ZONE" : "us-west-1b" },
      "us-west-2"          : { "ZONE" : "us-west-2b" },
      "eu-west-1"          : { "ZONE" : "eu-west-1b" },
      "ap-southeast-1"     : { "ZONE" : "ap-southeast-1b" },
      "ap-northeast-1"     : { "ZONE" : "ap-northeast-1b" },
      "ap-southeast-2"     : { "ZONE" : "ap-southeast-2b" },
      "sa-east-1"          : { "ZONE" : "sa-east-1b" }
    },

    "DnsRegion" : {
      "us-west-1"          : { "ZONE" : "us-west-1.compute.internal" },
      "us-west-2"          : { "ZONE" : "us-west-2.compute.internal" },
      "sa-east-1"          : { "ZONE" : "sa-east-1.compute.internal" },
      "us-east-1"          : { "ZONE" : "ec2.internal" },
      "eu-west-1"          : { "ZONE" : "eu-west-1.compute.internal" },
      "ap-southeast-2"     : { "ZONE" : "ap-southeast-2.compute.internal" }
    }
  },

  "Resources": {
    "vpc": {                      
      "Type": "AWS::EC2::VPC",
      "Properties": {
        "CidrBlock": { "Fn::FindInMap" : [ "subnets", { "Ref" : "Version" }, "VPCSN" ]},
        "InstanceTenancy": "default",
        "EnableDnsSupport": "true",
        "EnableDnsHostnames": "true",
        "Tags": [
          {
            "Key": "Application",
            "Value": "STAMP API"
          },
          {
            "Key": "Environment",   
            "Value": { "Ref" : "Environment" }
          },
          {
            "Key": "Name",            
            "Value": { "Fn::Join" : [ " ", ["Public API VPC", { "Ref" : "Environment"} ] ] }
          }
        ]
      }
    },

    "subnetPublicApis1": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": { "Fn::FindInMap" : [ "subnets", { "Ref" : "Version" }, "PUBLICSN" ]},
        "AvailabilityZone": { "Fn::FindInMap" : [ "subnetZone1", { "Ref" : "AWS::Region" }, "ZONE" ]},
        "VpcId": {
          "Ref": "vpc"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": { "Fn::Join" : [ " ", ["Public APIs AZ1", { "Ref" : "Environment"} ] ] }
          },
          {
            "Key": "Environment",
            "Value": { "Ref" : "Environment" }
          },
          {
            "Key": "Application",
            "Value": "Public API"
          }
        ]
      }
    },

    "subnetPublicApis2": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": { "Fn::FindInMap" : [ "subnets", { "Ref" : "Version" }, "PUBLICSN2" ]},
        "AvailabilityZone": { "Fn::FindInMap" : [ "subnetZone2", { "Ref" : "AWS::Region" }, "ZONE" ]},
        "VpcId": {
          "Ref": "vpc"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": { "Fn::Join" : [ " ", ["Public APIs AZ2", { "Ref" : "Environment"} ] ] }
          },
          {
            "Key": "Environment",
            "Value": { "Ref" : "Environment" }
          },
          {
            "Key": "Application",
            "Value": "Public API"
          }
        ]
      }
    },

    "subnetPrivateApis1": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": { "Fn::FindInMap" : [ "subnets", { "Ref" : "Version" }, "PRIVATESN" ]},
        "AvailabilityZone": { "Fn::FindInMap" : [ "subnetZone1", { "Ref" : "AWS::Region" }, "ZONE" ]},
        "VpcId": {
          "Ref": "vpc"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": { "Fn::Join" : [ " ", ["Private APIs AZ1", { "Ref" : "Environment"} ] ] }
          },
          {
            "Key": "Application",
            "Value": "Public API"
          },
          {
            "Key": "Environment",
            "Value": { "Ref" : "Environment" }
          }
        ]
      }
    },

    "subnetPrivateApis2": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": { "Fn::FindInMap" : [ "subnets", { "Ref" : "Version" }, "PRIVATESN2" ]},
        "AvailabilityZone": { "Fn::FindInMap" : [ "subnetZone2", { "Ref" : "AWS::Region" }, "ZONE" ]},
        "VpcId": {
          "Ref": "vpc"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": { "Fn::Join" : [ " ", ["Private APIs AZ2", { "Ref" : "Environment"} ] ] }
          },
          {
            "Key": "Application",
            "Value": "Public API"
          },
          {
            "Key": "Environment",
            "Value": { "Ref" : "Environment" }
          }
        ]
      }
    },

    "subnetWorkers1": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": { "Fn::FindInMap" : [ "subnets", { "Ref" : "Version" }, "WORKERSN1" ]},
        "AvailabilityZone": { "Fn::FindInMap" : [ "subnetZone1", { "Ref" : "AWS::Region" }, "ZONE" ]},
        "VpcId": {
          "Ref": "vpc"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": { "Fn::Join" : [ " ", ["Workers Subnet Pronet AZ1", { "Ref" : "Environment"} ] ] }
          },
          {
            "Key": "Application",
            "Value": "Public API"
          },
          {
            "Key": "Environment",
            "Value": { "Ref" : "Environment" }
          }
        ]
      }
    },

    "subnetWorkers2": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": { "Fn::FindInMap" : [ "subnets", { "Ref" : "Version" }, "WORKERSN2" ]},
        "AvailabilityZone": { "Fn::FindInMap" : [ "subnetZone1", { "Ref" : "AWS::Region" }, "ZONE" ]},
        "VpcId": {
          "Ref": "vpc"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": { "Fn::Join" : [ " ", ["Workers Subnet Red Efectiva AZ1", { "Ref" : "Environment"} ] ] }
          },
          {
            "Key": "Application",
            "Value": "Public API"
          },
          {
            "Key": "Environment",
            "Value": { "Ref" : "Environment" }
          }
        ]
      }
    },

    "subnetWorkers3": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": { "Fn::FindInMap" : [ "subnets", { "Ref" : "Version" }, "WORKERSN3" ]},
        "AvailabilityZone": { "Fn::FindInMap" : [ "subnetZone1", { "Ref" : "AWS::Region" }, "ZONE" ]},
        "VpcId": {
          "Ref": "vpc"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": { "Fn::Join" : [ " ", ["Workers Subnet PuntoXpress AZ1", { "Ref" : "Environment"} ] ] }
          },
          {
            "Key": "Application",
            "Value": "Public API"
          },
          {
            "Key": "Environment",
            "Value": { "Ref" : "Environment" }
          }
        ]
      }
    },

    "subnetWorkers4": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": { "Fn::FindInMap" : [ "subnets", { "Ref" : "Version" }, "WORKERSN4" ]},
        "AvailabilityZone": { "Fn::FindInMap" : [ "subnetZone1", { "Ref" : "AWS::Region" }, "ZONE" ]},
        "VpcId": {
          "Ref": "vpc"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": { "Fn::Join" : [ " ", ["Workers Subnet PuntoFacil AZ1", { "Ref" : "Environment"} ] ] }
          },
          {
            "Key": "Application",
            "Value": "Public API"
          },
          {
            "Key": "Environment",
            "Value": { "Ref" : "Environment" }
          }
        ]
      }
    },

    "subnetWorkers5": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": { "Fn::FindInMap" : [ "subnets", { "Ref" : "Version" }, "WORKERSN5" ]},
        "AvailabilityZone": { "Fn::FindInMap" : [ "subnetZone1", { "Ref" : "AWS::Region" }, "ZONE" ]},
        "VpcId": {
          "Ref": "vpc"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": { "Fn::Join" : [ " ", ["Workers Subnet Tpago AZ1", { "Ref" : "Environment"} ] ] }
          },
          {
            "Key": "Application",
            "Value": "Public API"
          },
          {
            "Key": "Environment",
            "Value": { "Ref" : "Environment" }
          }
        ]
      }
    },

    "subnetWorkers6": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": { "Fn::FindInMap" : [ "subnets", { "Ref" : "Version" }, "WORKERSN6" ]},
        "AvailabilityZone": { "Fn::FindInMap" : [ "subnetZone1", { "Ref" : "AWS::Region" }, "ZONE" ]},
        "VpcId": {
          "Ref": "vpc"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": { "Fn::Join" : [ " ", ["Workers Subnet Epago AZ1", { "Ref" : "Environment"} ] ] }
          },
          {
            "Key": "Application",
            "Value": "Public API"
          },
          {
            "Key": "Environment",
            "Value": { "Ref" : "Environment" }
          }
        ]
      }
    },

    "subnetWorkers7": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": { "Fn::FindInMap" : [ "subnets", { "Ref" : "Version" }, "WORKERSN7" ]},
        "AvailabilityZone": { "Fn::FindInMap" : [ "subnetZone1", { "Ref" : "AWS::Region" }, "ZONE" ]},
        "VpcId": {
          "Ref": "vpc"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": { "Fn::Join" : [ " ", ["Workers Subnet TransferTo AZ1", { "Ref" : "Environment"} ] ] }
          },
          {
            "Key": "Application",
            "Value": "Public API"
          },
          {
            "Key": "Environment",
            "Value": { "Ref" : "Environment" }
          }
        ]
      }
    },

    "subnetWorkers101": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": { "Fn::FindInMap" : [ "subnets", { "Ref" : "Version" }, "WORKERSN101" ]},
        "AvailabilityZone": { "Fn::FindInMap" : [ "subnetZone2", { "Ref" : "AWS::Region" }, "ZONE" ]},
        "VpcId": {
          "Ref": "vpc"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": { "Fn::Join" : [ " ", ["Workers Subnet Pronet AZ2", { "Ref" : "Environment"} ] ] }
          },
          {
            "Key": "Application",
            "Value": "Public API"
          },
          {
            "Key": "Environment",
            "Value": { "Ref" : "Environment" }
          }
        ]
      }
    },

    "subnetWorkers102": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": { "Fn::FindInMap" : [ "subnets", { "Ref" : "Version" }, "WORKERSN102" ]},
        "AvailabilityZone": { "Fn::FindInMap" : [ "subnetZone2", { "Ref" : "AWS::Region" }, "ZONE" ]},
        "VpcId": {
          "Ref": "vpc"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": { "Fn::Join" : [ " ", ["Workers Subnet Red Efectiva AZ2", { "Ref" : "Environment"} ] ] }
          },
          {
            "Key": "Application",
            "Value": "Public API"
          },
          {
            "Key": "Environment",
            "Value": { "Ref" : "Environment" }
          }
        ]
      }
    },

    "subnetWorkers103": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": { "Fn::FindInMap" : [ "subnets", { "Ref" : "Version" }, "WORKERSN103" ]},
        "AvailabilityZone": { "Fn::FindInMap" : [ "subnetZone2", { "Ref" : "AWS::Region" }, "ZONE" ]},
        "VpcId": {
          "Ref": "vpc"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": { "Fn::Join" : [ " ", ["Workers Subnet PuntoXpress AZ2", { "Ref" : "Environment"} ] ] }
          },
          {
            "Key": "Application",
            "Value": "Public API"
          },
          {
            "Key": "Environment",
            "Value": { "Ref" : "Environment" }
          }
        ]
      }
    },

    "subnetWorkers104": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": { "Fn::FindInMap" : [ "subnets", { "Ref" : "Version" }, "WORKERSN104" ]},
        "AvailabilityZone": { "Fn::FindInMap" : [ "subnetZone2", { "Ref" : "AWS::Region" }, "ZONE" ]},
        "VpcId": {
          "Ref": "vpc"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": { "Fn::Join" : [ " ", ["Workers Subnet PuntoFacil AZ2", { "Ref" : "Environment"} ] ] }
          },
          {
            "Key": "Application",
            "Value": "Public API"
          },
          {
            "Key": "Environment",
            "Value": { "Ref" : "Environment" }
          }
        ]
      }
    },

    "subnetWorkers105": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": { "Fn::FindInMap" : [ "subnets", { "Ref" : "Version" }, "WORKERSN105" ]},
        "AvailabilityZone": { "Fn::FindInMap" : [ "subnetZone2", { "Ref" : "AWS::Region" }, "ZONE" ]},
        "VpcId": {
          "Ref": "vpc"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": { "Fn::Join" : [ " ", ["Workers Subnet Tpago AZ2", { "Ref" : "Environment"} ] ] }
          },
          {
            "Key": "Application",
            "Value": "Public API"
          },
          {
            "Key": "Environment",
            "Value": { "Ref" : "Environment" }
          }
        ]
      }
    },

    "subnetWorkers106": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": { "Fn::FindInMap" : [ "subnets", { "Ref" : "Version" }, "WORKERSN106" ]},
        "AvailabilityZone": { "Fn::FindInMap" : [ "subnetZone2", { "Ref" : "AWS::Region" }, "ZONE" ]},
        "VpcId": {
          "Ref": "vpc"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": { "Fn::Join" : [ " ", ["Workers Subnet Epago AZ2", { "Ref" : "Environment"} ] ] }
          },
          {
            "Key": "Application",
            "Value": "Public API"
          },
          {
            "Key": "Environment",
            "Value": { "Ref" : "Environment" }
          }
        ]
      }
    },

    "subnetWorkers107": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": { "Fn::FindInMap" : [ "subnets", { "Ref" : "Version" }, "WORKERSN107" ]},
        "AvailabilityZone": { "Fn::FindInMap" : [ "subnetZone2", { "Ref" : "AWS::Region" }, "ZONE" ]},
        "VpcId": {
          "Ref": "vpc"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": { "Fn::Join" : [ " ", ["Workers Subnet AZ2", { "Ref" : "Environment"} ] ] }
          },
          {
            "Key": "Application",
            "Value": "Public API"
          },
          {
            "Key": "Environment",
            "Value": { "Ref" : "Environment" }
          }
        ]
      }
    },
 
    "subnetManage1": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": { "Fn::FindInMap" : [ "subnets", { "Ref" : "Version" }, "MANAGESN" ]},
        "AvailabilityZone": { "Fn::FindInMap" : [ "subnetZone1", { "Ref" : "AWS::Region" }, "ZONE" ]},
        "VpcId": {
          "Ref": "vpc"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": { "Fn::Join" : [ " ", ["Management Subnet AZ1", { "Ref" : "Environment"} ] ] }
          },
          {
            "Key": "Application",
            "Value": "Public API"
          },
          {
            "Key": "Environment",
            "Value": { "Ref" : "Environment" }
          }
        ]
      }
    },

    "subnetManage2": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": { "Fn::FindInMap" : [ "subnets", { "Ref" : "Version" }, "MANAGESN2" ]},
        "AvailabilityZone": { "Fn::FindInMap" : [ "subnetZone2", { "Ref" : "AWS::Region" }, "ZONE" ]},
        "VpcId": {
          "Ref": "vpc"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": { "Fn::Join" : [ " ", ["Management Subnet AZ2", { "Ref" : "Environment"} ] ] }
          },
          {
            "Key": "Application",
            "Value": "Public API"
          },
          {
            "Key": "Environment",
            "Value": { "Ref" : "Environment" }
          }
        ]
      }
    },

    "subnetDataBase": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": { "Fn::FindInMap" : [ "subnets", { "Ref" : "Version" }, "DBSN" ]},
        "AvailabilityZone": { "Fn::FindInMap" : [ "subnetZone1", { "Ref" : "AWS::Region" }, "ZONE" ]},
        "VpcId": {
          "Ref": "vpc"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": { "Fn::Join" : [ " ", ["DataBase Subnet AZ1", { "Ref" : "Environment"} ] ] }
          },
          {
            "Key": "Application",
            "Value": "Public API"
          },
          {
            "Key": "Environment",
            "Value": { "Ref" : "Environment" }
          }
        ]
      }
    },

    "subnetDataBase2": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": { "Fn::FindInMap" : [ "subnets", { "Ref" : "Version" }, "DBSN2" ]},
        "AvailabilityZone": { "Fn::FindInMap" : [ "subnetZone2", { "Ref" : "AWS::Region" }, "ZONE" ]},
        "VpcId": {
          "Ref": "vpc"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": { "Fn::Join" : [ " ", ["DataBase Subnet AZ2", { "Ref" : "Environment"} ] ] }
          },
          {
            "Key": "Application",
            "Value": "Public API"
          },
          {
            "Key": "Environment",
            "Value": { "Ref" : "Environment" }
          }
        ]
      }
    },

    "igwPublicApi": {
      "Type": "AWS::EC2::InternetGateway",
      "Properties": {
        "Tags": [
          {
            "Key": "Environment",
            "Value": { "Ref" : "Environment" }
          },
          {
            "Key": "Application",
            "Value": "Public API"
          },
          {
            "Key": "Name",
            "Value": "Public API IGW"
          }
        ]
      }
    },

    "doptPublicApi": {
      "Type": "AWS::EC2::DHCPOptions",
      "Properties": {
        "DomainName": { "Fn::FindInMap" : [ "DnsRegion", { "Ref" : "AWS::Region" }, "ZONE" ]},
        "DomainNameServers": [
          "AmazonProvidedDNS"
        ]
      }
    },

    "doptPublicApiBluekite": {
      "Type": "AWS::EC2::DHCPOptions",
      "Properties": {
        "DomainName": "bluekite.com",
        "DomainNameServers": [
          "AmazonProvidedDNS"
        ]
      }
    },

    "aclPublicApi": {
      "Type": "AWS::EC2::NetworkAcl",
      "Properties": {
        "VpcId": {
          "Ref": "vpc"
        },
        "Tags": [
          {
            "Key": "Environment",
            "Value": { "Ref" : "Environment" }
          },
          {
            "Key": "Application",
            "Value": "Public API"
          },
          {
            "Key": "Name",
            "Value": "Public API ACL"
          }
        ]
      }
    },

    "rtbPrivateSubnets": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "vpc"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "Stamp Private Route Table"
          },
          {
            "Key": "Applilcation",
            "Value": "Public API"
          },
          {
            "Key": "Environment",
            "Value": { "Ref" : "Environment" }
          }
        ]
      }
    },
    "rtbPublicSubnet": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "vpc"
        },
        "Tags": [
          {
            "Key": "Application",
            "Value": "Public API"
          },
          {
            "Key": "Name",
            "Value": "Stamp Public Route Table"
          },
          {
            "Key": "Environment",
            "Value": { "Ref" : "Environment" }
          }
        ]
      }
    },

    "NatNetworkInterface": {
      "Type" : "AWS::EC2::NetworkInterface",
      "Properties" : {
        "SourceDestCheck" : true,
        "SubnetId" : {"Ref" : "subnetPublicApis1"}
      }
    },

    "instanceNAT": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "DisableApiTermination": "FALSE",
        "ImageId": { "Fn::FindInMap" : [ "NATMap", { "Ref" : "AWS::Region" }, "AMI" ]},
        "InstanceType": "t1.micro",
        "SecurityGroupIds" : [ {"Ref" : "sgNat"} ],
        "SubnetId" : { "Ref" : "subnetPublicApis1" },
        "KernelId": { "Fn::FindInMap" : [ "KernelId", { "Ref" : "AWS::Region" }, "AKI" ]},
        "KeyName": { "Fn::FindInMap" : [ "keys", { "Ref" : "Environment" }, "keypair" ]},
        "SourceDestCheck" : "false",
        "Monitoring": "false",
        "Tags": [
          {
            "Key": "Environment",
            "Value": { "Ref" : "Environment" }
          },
          {
            "Key": "Application",
            "Value": "Public API"
          },
          {
            "Key": "Name",
            "Value": { "Fn::Join" : [ ".", ["nat", { "Ref" : "Environment"} ] ] }
          }
        ]
      }
    },

    "IPAssocNAT": {
      "Type": "AWS::EC2::EIPAssociation",
      "Properties": {
        "InstanceId": {
          "Ref": "instanceNAT"
        },
        "AllocationId": { "Ref" : "AllocationIdNAT"}
      }
     },

    "DNSRecordNAT" : {
      "Type" : "AWS::Route53::RecordSet",
      "Properties" : {
        "HostedZoneName" : "bluekite.com.",
        "Comment" : "DNS name for my instance.",
        "Name" : { "Fn::Join" : [ "", ["nat", { "Ref" : "StackID" } , { "Fn::FindInMap" : [ "dot", { "Ref" : "Environment" }, "DOT" ]},".bluekite.com"]]},
        "Type" : "CNAME",
        "TTL" : "300",
        "ResourceRecords" : [ { "Fn::GetAtt" : [ "instanceNAT", "PublicDnsName" ] } ]
      },
      "DependsOn" : "IPAssocNAT"
    },

    "Bastion" : {
      "Type" : "AWS::EC2::Instance",
      "Properties" : {
        "DisableApiTermination": "FALSE",
        "ImageId" : { "Fn::FindInMap" : [ "NATMap", { "Ref" : "AWS::Region" }, "AMI" ]},
        "KeyName" : { "Fn::FindInMap" : [ "keys", { "Ref" : "Environment" }, "keypair" ]},
        "InstanceType" : "t1.micro",
        "SecurityGroupIds" : [ {"Ref" : "sgBastion"} ],
        "SubnetId" : { "Ref" : "subnetPublicApis1" },
        "Tags" : [ {"Key" : "Name", "Value" : { "Fn::Join" : [ ".", ["bastion", { "Ref" : "Environment"} ] ] } } ]
      }
    },

    "IPAssocBastion": {
      "Type": "AWS::EC2::EIPAssociation",
      "Properties": {
        "InstanceId": {
          "Ref": "Bastion"
        },
        "AllocationId": { "Ref" : "AllocationIdBastion"}
      }
    },

    "DNSRecordBastion" : {
      "Type" : "AWS::Route53::RecordSet",
      "Properties" : {
        "HostedZoneName" : "bluekite.com.",
        "Comment" : "DNS name for my instance.",
        "Name" : { "Fn::Join" : [ "", ["bastion", { "Ref" : "StackID" } , { "Fn::FindInMap" : [ "dot", { "Ref" : "Environment" }, "DOT" ]},".bluekite.com"]]},
        "Type" : "CNAME",
        "TTL" : "300",
        "ResourceRecords" : [ { "Fn::GetAtt" : [ "Bastion", "PublicDnsName" ] } ]
      },
      "DependsOn" : "IPAssocBastion"
    },

    "sgMonitors": {
      "Type": "AWS::EC2::SecurityGroup",
      "DependsOn": "sgBastion",
      "Properties": {
        "GroupDescription": "Redis Monitor Service",
        "VpcId": {
          "Ref": "vpc"
          },
          "Tags":[
            {
            "Key": "Name",
            "Value": { "Fn::Join" : [ " ", ["Monitors SG", { "Ref" : "Environment"} ] ] }
            }
          ],

        "SecurityGroupIngress": [
          {
            "IpProtocol": "icmp",
            "FromPort": "-1",
            "ToPort": "-1",
            "CidrIp": "0.0.0.0/0"
          },
          {
            "IpProtocol": "tcp",
            "FromPort": "80",
            "ToPort": "80",
            "CidrIp": { "Fn::FindInMap" : [ "subnets", { "Ref" : "Version" }, "VPCSN" ]}
          },
          {
            "IpProtocol": "tcp",
            "FromPort": "6379",
            "ToPort": "6379",
            "CidrIp": { "Fn::FindInMap" : [ "subnets", { "Ref" : "Version" }, "VPCSN" ]}
          },
          {
            "IpProtocol": "tcp",
            "FromPort": "6379",
            "ToPort": "6379",
            "CidrIp": { "Fn::FindInMap" : [ "subnets", { "Ref" : "Version" }, "VPCSN" ]}
          },
          {
            "IpProtocol": "udp",
            "FromPort": "53",
            "ToPort": "53",
            "CidrIp": { "Fn::FindInMap" : [ "subnets", { "Ref" : "Version" }, "VPCSN" ]}
          }
        ],
        "SecurityGroupEgress": [
          {
            "IpProtocol": "-1",
            "CidrIp": "0.0.0.0/0"
          }
        ]
      }
    },

    "sgPrivateApis": {
      "Type": "AWS::EC2::SecurityGroup",
      "DependsOn": "sgBastion",
      "Properties": {
        "GroupDescription": "Private APIs",
        "VpcId": {
          "Ref": "vpc"
          },

          "Tags":[
            {
            "Key": "Name",
            "Value": { "Fn::Join" : [ " ", ["Private Apis SG", { "Ref" : "Environment"} ] ] }
            }
          ],
              
        "SecurityGroupIngress": [
          {
            "IpProtocol": "icmp",
            "FromPort": "-1",
            "ToPort": "-1",
            "CidrIp": "0.0.0.0/0"
          },
          {
            "IpProtocol": "tcp",
            "FromPort": "443",
            "ToPort": "443",
            "CidrIp": { "Fn::FindInMap" : [ "subnets", { "Ref" : "Version" }, "VPCSN" ]}
          },
          {
            "IpProtocol": "tcp",
            "FromPort": "80",
            "ToPort": "80",
            "CidrIp": { "Fn::FindInMap" : [ "subnets", { "Ref" : "Version" }, "VPCSN" ]}
          },
          {
            "IpProtocol": "tcp",
            "FromPort": "6379",
            "ToPort": "6379",
            "CidrIp": { "Fn::FindInMap" : [ "subnets", { "Ref" : "Version" }, "VPCSN" ]}
          },
          {
            "IpProtocol": "tcp",
            "FromPort": "6379",
            "ToPort": "6379",
            "CidrIp": { "Fn::FindInMap" : [ "subnets", { "Ref" : "Version" }, "VPCSN" ]}
          },
          {
            "IpProtocol": "tcp",
            "FromPort": "11300",
            "ToPort": "11300",
            "CidrIp": { "Fn::FindInMap" : [ "subnets", { "Ref" : "Version" }, "VPCSN" ]}
          },
          {
            "IpProtocol": "udp",
            "FromPort": "53",
            "ToPort": "53",
            "CidrIp": { "Fn::FindInMap" : [ "subnets", { "Ref" : "Version" }, "VPCSN" ]}
          }
        ],
        "SecurityGroupEgress": [
          {
            "IpProtocol": "-1",
            "CidrIp": "0.0.0.0/0"
          }
        ]
      }
    },

    "sgLogstash": {
      "Type": "AWS::EC2::SecurityGroup",
      "DependsOn": "sgBastion",
      "Properties": {
        "GroupDescription": "Private APIs",
        "VpcId": {
          "Ref": "vpc"
          },

          "Tags":[
            {
            "Key": "Name",
            "Value": { "Fn::Join" : [ " ", ["Logstash SG", { "Ref" : "Environment"} ] ] }
            }
          ],
                
        "SecurityGroupIngress": [
          {
            "IpProtocol": "icmp",
            "FromPort": "-1",
            "ToPort": "-1",
            "CidrIp": "0.0.0.0/0"
          },
          {
            "IpProtocol": "tcp",
            "FromPort": "22",
            "ToPort": "22",
            "CidrIp": "192.168.0.0/24"
          },
          {
            "IpProtocol": "tcp",
            "FromPort": "80",
            "ToPort": "80",
            "CidrIp": { "Fn::FindInMap" : [ "subnets", { "Ref" : "Version" }, "VPCSN" ]}
          },
          {
            "IpProtocol": "tcp",
            "FromPort": "80",
            "ToPort": "80",
            "CidrIp": "192.168.0.0/24"
          },
          {
            "IpProtocol": "tcp",
            "FromPort": "6379",
            "ToPort": "6379",
            "CidrIp": { "Fn::FindInMap" : [ "subnets", { "Ref" : "Version" }, "VPCSN" ]}
          },
          {
            "IpProtocol": "tcp",
            "FromPort": "9200",
            "ToPort": "9200",
            "CidrIp": "192.168.0.0/24"
          },
          {
            "IpProtocol": "tcp",
            "FromPort": "9200",
            "ToPort": "9200",
            "CidrIp": { "Fn::FindInMap" : [ "subnets", { "Ref" : "Version" }, "VPCSN" ]}
          },
          {
            "IpProtocol": "tcp",
            "FromPort": "5001",
            "ToPort": "5001",
            "CidrIp": "192.168.0.0/24"
          },
          {
            "IpProtocol": "tcp",
            "FromPort": "5001",
            "ToPort": "5001",
            "CidrIp": { "Fn::FindInMap" : [ "subnets", { "Ref" : "Version" }, "VPCSN" ]}
          },
          {
            "IpProtocol": "udp",
            "FromPort": "5001",
            "ToPort": "5001",
            "CidrIp": "192.168.0.0/24"
          },
          {
            "IpProtocol": "udp",
            "FromPort": "5001",
            "ToPort": "5001",
            "CidrIp": { "Fn::FindInMap" : [ "subnets", { "Ref" : "Version" }, "VPCSN" ]}
          },
          {
            "IpProtocol": "udp",
            "FromPort": "53",
            "ToPort": "53",
            "CidrIp": { "Fn::FindInMap" : [ "subnets", { "Ref" : "Version" }, "VPCSN" ]}
          },
          {
            "IpProtocol": "udp",
            "FromPort": "53",
            "ToPort": "53",
            "CidrIp": "192.168.0.0/24"
          }
        ],
        "SecurityGroupEgress": [
          {
            "IpProtocol": "-1",
            "CidrIp": "0.0.0.0/0"
          }
        ]
      }
    },

    "sgBastion": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "SHH Connections",
        "VpcId": {
          "Ref": "vpc"
          },

          "Tags":[
            {
            "Key": "Name",
            "Value": { "Fn::Join" : [ " ", ["Bastion SG", { "Ref" : "Environment"} ] ] }
            }
          ],
                
        "SecurityGroupIngress": [
          {
            "IpProtocol": "tcp",
            "FromPort": "22",
            "ToPort": "22",
            "CidrIp": "0.0.0.0/0"
          }
        ],
        "SecurityGroupEgress": [
          {
            "IpProtocol": "tcp",
            "FromPort": "22",
            "ToPort": "22",
            "CidrIp": "0.0.0.0/0"
          }
        ]
      }
    },

    "sgNat": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "Public API NAT",
        "VpcId": {
          "Ref": "vpc"
          },

          "Tags":[
            {
            "Key": "Name",
            "Value": "Nat SG"
            }
          ],
                
        "SecurityGroupIngress": [
          {
            "IpProtocol": "icmp",
            "FromPort": "-1",
            "ToPort": "-1",
            "CidrIp": "0.0.0.0/0"
          },
          {
            "IpProtocol": "-1",
            "FromPort": "-1",
            "ToPort": "-1",
            "CidrIp": { "Fn::FindInMap" : [ "subnets", { "Ref" : "Version" }, "VPCSN" ]}
          },
          {
            "IpProtocol": "tcp",
            "FromPort": "9418",
            "ToPort": "9418",
            "CidrIp": "0.0.0.0/0"
          },
          {
            "IpProtocol": "tcp",
            "FromPort": "80",
            "ToPort": "80",
            "CidrIp": "0.0.0.0/0"
          },

          {
            "IpProtocol": "tcp",
            "FromPort": "8080",
            "ToPort": "8080",
            "CidrIp": "192.168.0.0/24"
          },
          {
            "IpProtocol": "tcp",
            "FromPort": "8080",
            "ToPort": "8080",
            "CidrIp": "186.151.60.250/32"
          },
          {
            "IpProtocol": "tcp",
            "FromPort": "8080",
            "ToPort": "8080",
            "CidrIp": "190.99.116.194/32"
          },
                    {
            "IpProtocol": "tcp",
            "FromPort": "8080",
            "ToPort": "8080",
            "CidrIp": "186.64.109.138/32"
          },
          {
            "IpProtocol": "tcp",
            "FromPort": "22",
            "ToPort": "22",
            "CidrIp": "192.168.0.0/24"
          },
          {
            "IpProtocol": "tcp",
            "FromPort": "443",
            "ToPort": "443",
            "CidrIp": "0.0.0.0/0"
          },
          {
            "IpProtocol": "tcp",
            "FromPort": "6379",
            "ToPort": "6379",
            "CidrIp": { "Fn::FindInMap" : [ "subnets", { "Ref" : "Version" }, "VPCSN" ]}
          },
          {
            "IpProtocol": "tcp",
            "FromPort": "11300",
            "ToPort": "11300",
            "CidrIp": { "Fn::FindInMap" : [ "subnets", { "Ref" : "Version" }, "VPCSN" ]}
          },
          {
            "IpProtocol": "udp",
            "FromPort": "53",
            "ToPort": "53",
            "CidrIp": { "Fn::FindInMap" : [ "subnets", { "Ref" : "Version" }, "VPCSN" ]}
          },
          {
            "IpProtocol": "udp",
            "FromPort": "53",
            "ToPort": "53",
            "CidrIp": "192.168.0.0/24"
          }
        ],
        "SecurityGroupEgress": [
          {
            "IpProtocol": "-1",
            "CidrIp": "0.0.0.0/0"
          }
        ]
      }
    },

    "sgdefault": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "default VPC security group",
        "VpcId": {
          "Ref": "vpc"
        },
        "SecurityGroupEgress": [
          {
            "IpProtocol": "-1",
            "CidrIp": "0.0.0.0/0"
          }
        ]
      }
    },

    "sgGTAccounts": {
      "Type": "AWS::EC2::SecurityGroup",
      "DependsOn": "sgBastion",
      "Properties": {
        "GroupDescription": "Guatemala accounts applications",
        "VpcId": {
          "Ref": "vpc"
          },

          "Tags":[
            {
            "Key": "Name",
            "Value": { "Fn::Join" : [ " ", ["Guatemala Accounts Application SG", { "Ref" : "Environment"} ] ] }
            }
          ],
                
         "SecurityGroupIngress": [   
          {
            "IpProtocol": "icmp",
            "FromPort": "-1",
            "ToPort": "-1",
            "CidrIp": "0.0.0.0/0"
          },
          {
            "IpProtocol": "tcp",
            "FromPort": "22",
            "ToPort": "22",
            "CidrIp": "192.168.0.0/24"
          },
          {
            "IpProtocol": "tcp",
            "FromPort": "8080",
            "ToPort": "8080",
            "CidrIp": "192.168.0.0/24"
          },
          {
            "IpProtocol": "tcp",
            "FromPort": "6379",
            "ToPort": "6379",
            "CidrIp": { "Fn::FindInMap" : [ "subnets", { "Ref" : "Version" }, "VPCSN" ]}
          },
          {
            "IpProtocol": "tcp",
            "FromPort": "80",
            "ToPort": "80",
            "CidrIp": { "Fn::FindInMap" : [ "subnets", { "Ref" : "Version" }, "VPCSN" ]}
          },
          {
            "IpProtocol": "tcp",
            "FromPort": "80",
            "ToPort": "80",
            "CidrIp": "192.168.0.0/24"
          },
          {
            "IpProtocol": "tcp",
            "FromPort": "11300",
            "ToPort": "11300",
            "CidrIp": { "Fn::FindInMap" : [ "subnets", { "Ref" : "Version" }, "VPCSN" ]}
          },
          {
            "IpProtocol": "udp",
            "FromPort": "53",
            "ToPort": "53",
            "CidrIp": { "Fn::FindInMap" : [ "subnets", { "Ref" : "Version" }, "VPCSN" ]}
          },
          {
            "IpProtocol": "udp",
            "FromPort": "53",
            "ToPort": "53",
            "CidrIp": "192.168.0.0/24"
          }
        ],
       "SecurityGroupEgress": [
          {
            "IpProtocol": "-1",
            "CidrIp": "0.0.0.0/0"
          }
        ]
      }
    },

    "sgDOAccounts": {
        "Type": "AWS::EC2::SecurityGroup",
        "DependsOn": "sgBastion",
        "Properties": {
          "GroupDescription": "Dominican Republic accounts applications",
          "VpcId": {
            "Ref": "vpc"
            },    
            "Tags":[
              {
              "Key": "Name",
              "Value": { "Fn::Join" : [ " ", ["Dominican Republic Application SG", { "Ref" : "Environment"} ] ] }
              }
            ],
                   
           "SecurityGroupIngress": [   
            {
              "IpProtocol": "icmp",
              "FromPort": "-1",
              "ToPort": "-1",
              "CidrIp": "0.0.0.0/0"
            },
            {
              "IpProtocol": "tcp",
              "FromPort": "22",
              "ToPort": "22",
              "CidrIp": "192.168.0.0/24"
            },
            {
              "IpProtocol": "tcp",
              "FromPort": "6379",
              "ToPort": "6379",
              "CidrIp": { "Fn::FindInMap" : [ "subnets", { "Ref" : "Version" }, "VPCSN" ]}
            },
            {
              "IpProtocol": "tcp",
              "FromPort": "80",
              "ToPort": "80",
              "CidrIp": { "Fn::FindInMap" : [ "subnets", { "Ref" : "Version" }, "VPCSN" ]}
            },
            {
              "IpProtocol": "tcp",
              "FromPort": "80",
              "ToPort": "80",
              "CidrIp": "192.168.0.0/24"
            },
            {
              "IpProtocol": "tcp",
              "FromPort": "8080",
              "ToPort": "8080",
              "CidrIp": "192.168.0.0/24"
            },
            {
              "IpProtocol": "tcp",
              "FromPort": "11300",
              "ToPort": "11300",
              "CidrIp": { "Fn::FindInMap" : [ "subnets", { "Ref" : "Version" }, "VPCSN" ]}
            },
            {
              "IpProtocol": "udp",
              "FromPort": "53",
              "ToPort": "53",
              "CidrIp": { "Fn::FindInMap" : [ "subnets", { "Ref" : "Version" }, "VPCSN" ]}
            },
            {
              "IpProtocol": "udp",
              "FromPort": "53",
              "ToPort": "53",
              "CidrIp": "192.168.0.0/24"
            }
          ],
         "SecurityGroupEgress": [
            {
              "IpProtocol": "-1",
              "CidrIp": "0.0.0.0/0"
            }
          ]
        }
      },

    "sgMXAccounts": {
        "Type": "AWS::EC2::SecurityGroup",
        "DependsOn": "sgBastion",
        "Properties": {
          "GroupDescription": "Mexico accounts applications",
          "VpcId": {
            "Ref": "vpc"
            },    
            "Tags":[
              {
              "Key": "Name",
              "Value": { "Fn::Join" : [ " ", ["Mexico Application SG", { "Ref" : "Environment"} ] ] }
              }
            ],
                   
           "SecurityGroupIngress": [   
            {
              "IpProtocol": "icmp",
              "FromPort": "-1",
              "ToPort": "-1",
              "CidrIp": "0.0.0.0/0"
            },
            {
              "IpProtocol": "tcp",
              "FromPort": "22",
              "ToPort": "22",
              "CidrIp": "192.168.0.0/24"
            },
            {
              "IpProtocol": "tcp",
              "FromPort": "6379",
              "ToPort": "6379",
              "CidrIp": { "Fn::FindInMap" : [ "subnets", { "Ref" : "Version" }, "VPCSN" ]}
            },
            {
              "IpProtocol": "tcp",
              "FromPort": "80",
              "ToPort": "80",
              "CidrIp": { "Fn::FindInMap" : [ "subnets", { "Ref" : "Version" }, "VPCSN" ]}
            },
            {
              "IpProtocol": "tcp",
              "FromPort": "80",
              "ToPort": "80",
              "CidrIp": "192.168.0.0/24"
            },
            {
              "IpProtocol": "tcp",
              "FromPort": "11300",
              "ToPort": "11300",
              "CidrIp": { "Fn::FindInMap" : [ "subnets", { "Ref" : "Version" }, "VPCSN" ]}
            },
            {
              "IpProtocol": "udp",
              "FromPort": "53",
              "ToPort": "53",
              "CidrIp": { "Fn::FindInMap" : [ "subnets", { "Ref" : "Version" }, "VPCSN" ]}
            },
            {
              "IpProtocol": "udp",
              "FromPort": "53",
              "ToPort": "53",
              "CidrIp": "192.168.0.0/24"
            }
          ],
         "SecurityGroupEgress": [
            {
              "IpProtocol": "-1",
              "CidrIp": "0.0.0.0/0"
            }
          ]
        }
      },

    "sgISAccounts": {
      "Type": "AWS::EC2::SecurityGroup",
      "DependsOn": "sgBastion",
      "Properties": {
        "GroupDescription": "Island accounts applications",
        "VpcId": {
          "Ref": "vpc"
          },

          "Tags":[
            {
            "Key": "Name",
            "Value": { "Fn::Join" : [ " ", ["Iceland Accounts Application SG", { "Ref" : "Environment"} ] ] }
            }
          ],
                
        "SecurityGroupIngress": [
          {
            "IpProtocol": "icmp",
            "FromPort": "-1",
            "ToPort": "-1",
            "CidrIp": "0.0.0.0/0"
          },
          {
            "IpProtocol": "tcp",
            "FromPort": "22",
            "ToPort": "22",
            "CidrIp": "192.168.0.0/24"
          },
          {
            "IpProtocol": "tcp",
            "FromPort": "6379",
            "ToPort": "6379",
            "CidrIp": { "Fn::FindInMap" : [ "subnets", { "Ref" : "Version" }, "VPCSN" ]}
          },
          {
            "IpProtocol": "tcp",
            "FromPort": "80",
            "ToPort": "80",
            "CidrIp": { "Fn::FindInMap" : [ "subnets", { "Ref" : "Version" }, "VPCSN" ]}
          },
          {
            "IpProtocol": "tcp",
            "FromPort": "80",
            "ToPort": "80",
            "CidrIp": "192.168.0.0/24"
          },
          {
            "IpProtocol": "tcp",
            "FromPort": "11300",
            "ToPort": "11300",
            "CidrIp": { "Fn::FindInMap" : [ "subnets", { "Ref" : "Version" }, "VPCSN" ]}
          },
          {
            "IpProtocol": "udp",
            "FromPort": "53",
            "ToPort": "53",
            "CidrIp": { "Fn::FindInMap" : [ "subnets", { "Ref" : "Version" }, "VPCSN" ]}
          },
          {
            "IpProtocol": "udp",
            "FromPort": "53",
            "ToPort": "53",
            "CidrIp": "192.168.0.0/24"
          }
        ],
       "SecurityGroupEgress": [
          {
            "IpProtocol": "-1",
            "CidrIp": "0.0.0.0/0"
          }
        ]
      }
    },

    "sgSVAccounts": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "El Salvador accounts applications",
        "VpcId": {
          "Ref": "vpc"
          },

          "Tags":[
            {
            "Key": "Name",
            "Value": { "Fn::Join" : [ " ", ["El Salvador Accounts Application SG", { "Ref" : "Environment"} ] ] }
            }
          ],
                
         "SecurityGroupIngress": [   
          {
            "IpProtocol": "icmp",
            "FromPort": "-1",
            "ToPort": "-1",
            "CidrIp": "0.0.0.0/0"
          },
          {
            "IpProtocol": "tcp",
            "FromPort": "22",
            "ToPort": "22",
            "CidrIp": "192.168.0.0/24"
          },
          {
            "IpProtocol": "tcp",
            "FromPort": "6379",
            "ToPort": "6379",
            "CidrIp": { "Fn::FindInMap" : [ "subnets", { "Ref" : "Version" }, "VPCSN" ]}
          },
          {
            "IpProtocol": "tcp",
            "FromPort": "80",
            "ToPort": "80",
            "CidrIp": { "Fn::FindInMap" : [ "subnets", { "Ref" : "Version" }, "VPCSN" ]}
          },
          {
            "IpProtocol": "tcp",
            "FromPort": "80",
            "ToPort": "80",
            "CidrIp": "192.168.0.0/24"
          },
                    {
            "IpProtocol": "tcp",
            "FromPort": "8084",
            "ToPort": "8084",
            "CidrIp": { "Fn::FindInMap" : [ "subnets", { "Ref" : "Version" }, "VPCSN" ]}
          },
          {
            "IpProtocol": "tcp",
            "FromPort": "8089",
            "ToPort": "8089",
            "CidrIp": { "Fn::FindInMap" : [ "subnets", { "Ref" : "Version" }, "VPCSN" ]}
          },
          {
            "IpProtocol": "tcp",
            "FromPort": "8084",
            "ToPort": "8084",
            "CidrIp": "192.168.0.0/24"
          },
          {
            "IpProtocol": "tcp",
            "FromPort": "8089",
            "ToPort": "8089",
            "CidrIp": "192.168.0.0/24"
          },
          {
            "IpProtocol": "tcp",
            "FromPort": "11300",
            "ToPort": "11300",
            "CidrIp": { "Fn::FindInMap" : [ "subnets", { "Ref" : "Version" }, "VPCSN" ]}
          },
          {
            "IpProtocol": "udp",
            "FromPort": "53",
            "ToPort": "53",
            "CidrIp": { "Fn::FindInMap" : [ "subnets", { "Ref" : "Version" }, "VPCSN" ]}
          },
          {
            "IpProtocol": "udp",
            "FromPort": "53",
            "ToPort": "53",
            "CidrIp": "192.168.0.0/24"
          }
        ],
       "SecurityGroupEgress": [
          {
            "IpProtocol": "-1",
            "CidrIp": "0.0.0.0/0"
          }
        ]
      }
    },
    "sgNIAccounts": {
      "Type": "AWS::EC2::SecurityGroup",
      "DependsOn": "sgBastion",
      "Properties": {
        "GroupDescription": "Nicaragua accounts applications",
        "VpcId": {
          "Ref": "vpc"
          },

          "Tags":[
            {
            "Key": "Name",
            "Value": { "Fn::Join" : [ " ", ["Nicaragua Accounts Application SG", { "Ref" : "Environment"} ] ] }
            }
          ],
                
         "SecurityGroupIngress": [   
          {
            "IpProtocol": "icmp",
            "FromPort": "-1",
            "ToPort": "-1",
            "CidrIp": "0.0.0.0/0"
          },
          {
            "IpProtocol": "tcp",
            "FromPort": "22",
            "ToPort": "22",
            "CidrIp": "192.168.0.0/24"
          },
          {
            "IpProtocol": "tcp",
            "FromPort": "8080",
            "ToPort": "8080",
            "CidrIp": "192.168.0.0/24"
          },
          {
            "IpProtocol": "tcp",
            "FromPort": "6379",
            "ToPort": "6379",
            "CidrIp": { "Fn::FindInMap" : [ "subnets", { "Ref" : "Version" }, "VPCSN" ]}
          },
          {
            "IpProtocol": "tcp",
            "FromPort": "80",
            "ToPort": "80",
            "CidrIp": { "Fn::FindInMap" : [ "subnets", { "Ref" : "Version" }, "VPCSN" ]}
          },
          {
            "IpProtocol": "tcp",
            "FromPort": "80",
            "ToPort": "80",
            "CidrIp": "192.168.0.0/24"
          },
          {
            "IpProtocol": "tcp",
            "FromPort": "11300",
            "ToPort": "11300",
            "CidrIp": { "Fn::FindInMap" : [ "subnets", { "Ref" : "Version" }, "VPCSN" ]}
          },
          {
            "IpProtocol": "udp",
            "FromPort": "53",
            "ToPort": "53",
            "CidrIp": { "Fn::FindInMap" : [ "subnets", { "Ref" : "Version" }, "VPCSN" ]}
          },
          {
            "IpProtocol": "udp",
            "FromPort": "53",
            "ToPort": "53",
            "CidrIp": "192.168.0.0/24"
          }
        ],
       "SecurityGroupEgress": [
          {
            "IpProtocol": "-1",
            "CidrIp": "0.0.0.0/0"
          }
        ]
      }
    },

    "sgPAAccounts": {
      "Type": "AWS::EC2::SecurityGroup",
      "DependsOn": "sgBastion",
      "Properties": {
        "GroupDescription": "Panama accounts applications",
        "VpcId": {
          "Ref": "vpc"
          },

          "Tags":[
            {
            "Key": "Name",
            "Value": { "Fn::Join" : [ " ", ["Panama Accounts Application SG", { "Ref" : "Environment"} ] ] }
            }
          ],
                
         "SecurityGroupIngress": [   
          {
            "IpProtocol": "icmp",
            "FromPort": "-1",
            "ToPort": "-1",
            "CidrIp": "0.0.0.0/0"
          },
          {
            "IpProtocol": "tcp",
            "FromPort": "22",
            "ToPort": "22",
            "CidrIp": "192.168.0.0/24"
          },
          {
            "IpProtocol": "tcp",
            "FromPort": "8080",
            "ToPort": "8080",
            "CidrIp": "192.168.0.0/24"
          },
          {
            "IpProtocol": "tcp",
            "FromPort": "6379",
            "ToPort": "6379",
            "CidrIp": { "Fn::FindInMap" : [ "subnets", { "Ref" : "Version" }, "VPCSN" ]}
          },
          {
            "IpProtocol": "tcp",
            "FromPort": "80",
            "ToPort": "80",
            "CidrIp": { "Fn::FindInMap" : [ "subnets", { "Ref" : "Version" }, "VPCSN" ]}
          },
          {
            "IpProtocol": "tcp",
            "FromPort": "80",
            "ToPort": "80",
            "CidrIp": "192.168.0.0/24"
          },
          {
            "IpProtocol": "tcp",
            "FromPort": "11300",
            "ToPort": "11300",
            "CidrIp": { "Fn::FindInMap" : [ "subnets", { "Ref" : "Version" }, "VPCSN" ]}
          },
          {
            "IpProtocol": "udp",
            "FromPort": "53",
            "ToPort": "53",
            "CidrIp": { "Fn::FindInMap" : [ "subnets", { "Ref" : "Version" }, "VPCSN" ]}
          },
          {
            "IpProtocol": "udp",
            "FromPort": "53",
            "ToPort": "53",
            "CidrIp": "192.168.0.0/24"
          }
        ],
       "SecurityGroupEgress": [
          {
            "IpProtocol": "-1",
            "CidrIp": "0.0.0.0/0"
          }
        ]
      }
    },
    "sgPublicApis": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "Public facing services",
        "VpcId": {
          "Ref": "vpc"
          },

          "Tags":[
            {
            "Key": "Name",
            "Value": { "Fn::Join" : [ " ", ["Public Apis SG", { "Ref" : "Environment"} ] ] }
            }
          ],    
        "SecurityGroupIngress": [
          {
            "IpProtocol": "icmp",
            "FromPort": "-1",
            "ToPort": "-1",
            "CidrIp": "0.0.0.0/0"
          },
          {
            "IpProtocol": "tcp",
            "FromPort": "22",
            "ToPort": "22",
            "CidrIp": "192.168.0.0/24"
          },
          {
            "IpProtocol": "tcp",
            "FromPort": "80",
            "ToPort": "80",
            "CidrIp": "186.151.61.58/32"
          },
          {
            "IpProtocol": "tcp",
            "FromPort": "80",
            "ToPort": "80",
            "CidrIp": "186.64.109.136/29"
          },
          {
            "IpProtocol": "tcp",
            "FromPort": "80",
            "ToPort": "80",
            "CidrIp": "190.99.116.192/29"
          },
          {
            "IpProtocol": "tcp",
            "FromPort": "80",
            "ToPort": "80",
            "CidrIp": "190.99.116.112/29"
          },
          {
            "IpProtocol": "tcp",
            "FromPort": "80",
            "ToPort": "80",
            "CidrIp": "38.88.174.184/29"
          },
          {
            "IpProtocol": "tcp",
            "FromPort": "80",
            "ToPort": "80",
            "CidrIp": "38.99.15.104/29"
          },
          {
            "IpProtocol": "tcp",
            "FromPort": "80",
            "ToPort": "80",
            "CidrIp": "38.99.18.224/28"
          },
          {
            "IpProtocol": "tcp",
            "FromPort": "80",
            "ToPort": "80",
            "CidrIp": "38.99.29.128/25"
          },
          {
            "IpProtocol": "tcp",
            "FromPort": "80",
            "ToPort": "80",
            "CidrIp": "38.99.38.0/25"
          },
          {
            "IpProtocol": "tcp",
            "FromPort": "443",
            "ToPort": "443",
            "CidrIp": "186.151.61.58/32"
          },
          {
            "IpProtocol": "tcp",
            "FromPort": "443",
            "ToPort": "443",
            "CidrIp": "186.64.109.136/29"
          },
          {
            "IpProtocol": "tcp",
            "FromPort": "443",
            "ToPort": "443",
            "CidrIp": "190.99.116.192/29"
          },
          {
            "IpProtocol": "tcp",
            "FromPort": "443",
            "ToPort": "443",
            "CidrIp": "190.99.116.112/29"
          },
          {
            "IpProtocol": "tcp",
            "FromPort": "443",
            "ToPort": "443",
            "CidrIp": "38.88.174.184/29"
          },
          {
            "IpProtocol": "tcp",
            "FromPort": "443",
            "ToPort": "443",
            "CidrIp": "38.99.15.104/29"
          },
          {
            "IpProtocol": "tcp",
            "FromPort": "443",
            "ToPort": "443",
            "CidrIp": "38.99.18.224/28"
          },
          {
            "IpProtocol": "tcp",
            "FromPort": "443",
            "ToPort": "443",
            "CidrIp": "38.99.29.128/25"
          },
          {
            "IpProtocol": "tcp",
            "FromPort": "443",
            "ToPort": "443",
            "CidrIp": "38.99.38.0/25"
          }
        ],
        "SecurityGroupEgress": [
          {
            "IpProtocol": "-1",
            "CidrIp": "0.0.0.0/0"
          }
        ]
      },
      "DependsOn": "sgBastion"
    },
    "acl5": {
      "Type": "AWS::EC2::NetworkAclEntry",
      "Properties": {
        "CidrBlock": "0.0.0.0/0",
        "Egress": true,
        "Protocol": "-1",
        "RuleAction": "allow",
        "RuleNumber": "100",
        "NetworkAclId": {
          "Ref": "aclPublicApi"
        }
      }
    },
    "acl6": {
      "Type": "AWS::EC2::NetworkAclEntry",
      "Properties": {
        "CidrBlock": "0.0.0.0/0",
        "Protocol": "-1",
        "RuleAction": "allow",
        "RuleNumber": "100",
        "NetworkAclId": {
          "Ref": "aclPublicApi"
        }
      }
    },
    "subnetacl4": {
      "Type": "AWS::EC2::SubnetNetworkAclAssociation",
      "Properties": {
        "NetworkAclId": {
          "Ref": "aclPublicApi"
        },
        "SubnetId": {
          "Ref": "subnetPublicApis1"
        }
      }
    },
    "subnetacl5": {
      "Type": "AWS::EC2::SubnetNetworkAclAssociation",
      "Properties": {
        "NetworkAclId": {
          "Ref": "aclPublicApi"
        },
        "SubnetId": {
          "Ref": "subnetPublicApis2"
        }
      }
    },
    "gw3": {
      "Type": "AWS::EC2::VPCGatewayAttachment",
      "Properties": {
        "VpcId": {
          "Ref": "vpc"
        },
        "InternetGatewayId": {
          "Ref": "igwPublicApi"
        }
      }
    },

    "subnetroute1": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "rtbPublicSubnet"
        },
        "SubnetId": {
          "Ref": "subnetPublicApis2"
        }
      }
    },
    "subnetroute2": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "rtbPrivateSubnets"
        },
        "SubnetId": {
          "Ref": "subnetPrivateApis2"
        }
      }
    },
    "subnetroute3": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "rtbPublicSubnet"
        },
        "SubnetId": {
          "Ref": "subnetPublicApis1"
        }
      }
    },
    "subnetroute4": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "rtbPrivateSubnets"
        },
        "SubnetId": {
          "Ref": "subnetPrivateApis1"
        }
      }
    },
    "subnetroute5": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "rtbPrivateSubnets"
        },
        "SubnetId": {
          "Ref": "subnetWorkers1"
        }
      }
    },
    "subnetroute6": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "rtbPrivateSubnets"
        },
        "SubnetId": {
          "Ref": "subnetWorkers2"
        }
      }
    },
    "subnetroute7": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "rtbPrivateSubnets"
        },
        "SubnetId": {
          "Ref": "subnetWorkers3"
        }
      }
    },

    "subnetroute8": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "rtbPrivateSubnets"
        },
        "SubnetId": {
          "Ref": "subnetWorkers4"
        }
      }
    },
    "subnetroute9": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "rtbPrivateSubnets"
        },
        "SubnetId": {
          "Ref": "subnetWorkers5"
        }
      }
    },
    "subnetroute10": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "rtbPrivateSubnets"
        },
        "SubnetId": {
          "Ref": "subnetWorkers6"
        }
      }
    },
    "subnetroute11": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "rtbPrivateSubnets"
        },
        "SubnetId": {
          "Ref": "subnetWorkers7"
        }
      }
    },
    "subnetroute12": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "rtbPrivateSubnets"
        },
        "SubnetId": {
          "Ref": "subnetWorkers101"
        }
      }
    },
    "subnetroute13": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "rtbPrivateSubnets"
        },
        "SubnetId": {
          "Ref": "subnetWorkers102"
        }
      }
    },
    "subnetroute14": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "rtbPrivateSubnets"
        },
        "SubnetId": {
          "Ref": "subnetWorkers103"
        }
      }
    },

    "subnetroute15": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "rtbPrivateSubnets"
        },
        "SubnetId": {
          "Ref": "subnetWorkers104"
        }
      }
    },
    "subnetroute16": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "rtbPrivateSubnets"
        },
        "SubnetId": {
          "Ref": "subnetWorkers105"
        }
      }
    },
    "subnetroute17": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "rtbPrivateSubnets"
        },
        "SubnetId": {
          "Ref": "subnetWorkers106"
        }
      }
    },
    "subnetroute18": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "rtbPrivateSubnets"
        },
        "SubnetId": {
          "Ref": "subnetWorkers107"
        }
      }
    },
    "subnetroute19": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "rtbPrivateSubnets"
        },
        "SubnetId": {
          "Ref": "subnetManage1"
        }
      }
    },
    "subnetroute20": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "rtbPrivateSubnets"
        },
        "SubnetId": {
          "Ref": "subnetDataBase"
        }
      }
    },

    "subnetroute21": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "rtbPrivateSubnets"
        },
        "SubnetId": {
          "Ref": "subnetDataBase2"
        }
      }
    },

    "subnetroute22": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "rtbPrivateSubnets"
        },
        "SubnetId": {
          "Ref": "subnetManage2"
        }
      }
    },

    "route7": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "DestinationCidrBlock": "0.0.0.0/0",
        "RouteTableId": {
          "Ref": "rtbPrivateSubnets"
        },
        "InstanceId": {
          "Ref": "instanceNAT"
        }
      }
    },

    "route9": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "DestinationCidrBlock": "0.0.0.0/0",
        "RouteTableId": {
          "Ref": "rtbPublicSubnet"
        },
        "GatewayId": {
          "Ref": "igwPublicApi"
        }
      },
      "DependsOn": "gw3"
    },
    "dchpassoc2": {
      "Type": "AWS::EC2::VPCDHCPOptionsAssociation",
      "Properties": {
        "VpcId": {
          "Ref": "vpc"
        },
        "DhcpOptionsId": {
          "Ref": "doptPublicApi"
        }
      }
    },
    "ingress14": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgMonitors"
        },
        "IpProtocol": "tcp",
        "FromPort": "22",
        "ToPort": "22",
        "SourceSecurityGroupId": {
          "Ref": "sgBastion"
        },
        "SourceSecurityGroupOwnerId": "243238936187"
      }
    },
    "ingress15": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgPrivateApis"
        },
        "IpProtocol": "tcp",
        "FromPort": "22",
        "ToPort": "22",
        "SourceSecurityGroupId": {
          "Ref": "sgBastion"
        },
        "SourceSecurityGroupOwnerId": "243238936187"
      }
    },
    "ingress16": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgNat"
        },
        "IpProtocol": "tcp",
        "FromPort": "22",
        "ToPort": "22",
        "SourceSecurityGroupId": {
          "Ref": "sgBastion"
        },
        "SourceSecurityGroupOwnerId": "243238936187"
      }
    },
    "ingress17": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgdefault"
        },
        "IpProtocol": "-1",
        "SourceSecurityGroupId": {
          "Ref": "sgdefault"
        },
        "SourceSecurityGroupOwnerId": "243238936187"
      },
      "DependsOn" : "sgdefault"
    },
    "ingress18": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgPublicApis"
        },
        "IpProtocol": "tcp",
        "FromPort": "22",
        "ToPort": "22",
        "SourceSecurityGroupId": {
          "Ref": "sgBastion"
        },
        "SourceSecurityGroupOwnerId": "243238936187"
      }
    },

    "ingress20": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgMonitors"
        },
        "IpProtocol": "tcp",
        "FromPort": "22",
        "ToPort": "22",
        "SourceSecurityGroupId": {
          "Ref": "sgBastion"
        },
        "SourceSecurityGroupOwnerId": "243238936187"
      }
    },

    "ingress21": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgLogstash"
        },
        "IpProtocol": "tcp",
        "FromPort": "22",
        "ToPort": "22",
        "SourceSecurityGroupId": {
          "Ref": "sgBastion"
        },
        "SourceSecurityGroupOwnerId": "243238936187"
      }
    },
    "ingress22": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgPrivateApis"
        },
        "IpProtocol": "tcp",
        "FromPort": "80",
        "ToPort": "80",
        "SourceSecurityGroupId": {
          "Ref": "sgPublicApis"
        },
        "SourceSecurityGroupOwnerId": "243238936187"
      }
    },
    "ingress23": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgPrivateApis"
        },
        "IpProtocol": "tcp",
        "FromPort": "22",
        "ToPort": "22",
        "SourceSecurityGroupId": {
          "Ref": "sgBastion"
        },
        "SourceSecurityGroupOwnerId": "243238936187"
      }
    },
    "ingress24": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgGTAccounts"
        },
        "IpProtocol": "tcp",
        "FromPort": "22",
        "ToPort": "22",
        "SourceSecurityGroupId": {
          "Ref": "sgBastion"
        },
        "SourceSecurityGroupOwnerId": "243238936187"
      }
    },
    "ingress25": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgISAccounts"
        },
        "IpProtocol": "tcp",
        "FromPort": "22",
        "ToPort": "22",
        "SourceSecurityGroupId": {
          "Ref": "sgBastion"
        },
        "SourceSecurityGroupOwnerId": "243238936187"
      }
    },
    "ingress26": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgPublicApis"
        },
        "IpProtocol": "tcp",
        "FromPort": "22",
        "ToPort": "22",
        "SourceSecurityGroupId": {
          "Ref": "sgBastion"
        },
        "SourceSecurityGroupOwnerId": "243238936187"
      }
    },
    "ingress27": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgDOAccounts"
        },
        "IpProtocol": "tcp",
        "FromPort": "22",
        "ToPort": "22",
        "SourceSecurityGroupId": {
          "Ref": "sgBastion"
        },
        "SourceSecurityGroupOwnerId": "243238936187"
      }
    },
    "ingress28": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgMXAccounts"
        },
        "IpProtocol": "tcp",
        "FromPort": "22",
        "ToPort": "22",
        "SourceSecurityGroupId": {
          "Ref": "sgBastion"
        },
        "SourceSecurityGroupOwnerId": "243238936187"
      }
    },
    "ingress29": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgSVAccounts"
        },
        "IpProtocol": "tcp",
        "FromPort": "22",
        "ToPort": "22",
        "SourceSecurityGroupId": {
          "Ref": "sgBastion"
        },
        "SourceSecurityGroupOwnerId": "243238936187"
      }
    },
    "ingress30": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgNIAccounts"
        },
        "IpProtocol": "tcp",
        "FromPort": "22",
        "ToPort": "22",
        "SourceSecurityGroupId": {
          "Ref": "sgBastion"
        },
        "SourceSecurityGroupOwnerId": "243238936187"
      }
    },
    "ingress31": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgPAAccounts"
        },
        "IpProtocol": "tcp",
        "FromPort": "22",
        "ToPort": "22",
        "SourceSecurityGroupId": {
          "Ref": "sgBastion"
        },
        "SourceSecurityGroupOwnerId": "243238936187"
      }
    }
  },

    "Outputs" : {
        "PrivateApiSN1" : {
            "Value" : { "Ref" : "subnetPrivateApis1" }
        },
        "PublicApiSN1" : {
            "Value" : { "Ref" : "subnetPublicApis1" }
        },
        "PrivateApisSG" : {
            "Value" : { "Ref" : "sgPrivateApis" }
        },
        "PublicApisSG" : {
            "Value" : { "Ref" : "sgPublicApis" }
        },
        "ISAccountsSG" : {
            "Value" : { "Ref" : "sgISAccounts" }
        },
        "GTAccountsSG" : {
            "Value" : { "Ref" : "sgGTAccounts" }
        },
        "DOAccountsSG" : {
            "Value" : { "Ref" : "sgDOAccounts" }
        },
        "MXAccountsSG" : {
            "Value" : { "Ref" : "sgMXAccounts" }
        },
        "SVAccountsSG" : {
            "Value" : { "Ref" : "sgSVAccounts" }
        },
        "NIAccountsSG" : {
            "Value" : { "Ref" : "sgNIAccounts" }
        },
        "PAAccountsSG" : {
            "Value" : { "Ref" : "sgPAAccounts" }
        },
        "MonitorsSG" : {
            "Value" : { "Ref" : "sgMonitors" }
        },
        "LogstashSG" : {
            "Value" : { "Ref" : "sgLogstash" }
        },
        "BastionSG" : {
            "Value" : { "Ref" : "sgBastion" }
        },
        "NATSG" : {
            "Value" : { "Ref" : "sgNat" }
        }
  },
  "Description": "Public API VPC"
}