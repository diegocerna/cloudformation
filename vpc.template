{
  "AWSTemplateFormatVersion": "2010-09-09",

  "Parameters" : {

    "Provider" : {
      "Type" : "String",
      "Default" : "Provider",
      "Description" : "Provider for VPN connection - smart or broadcom"
    },

    "Environment" : {
      "Type" : "String",
      "Description" : "Tag the environment, like development, production, etc."
    }
  },
  
  "Mappings" : {
    
    "NATMap" : {
      "us-east-1"           : { "AMI" : "ami-ad227cc4" },
      "us-west-1"           : { "AMI" : "ami-d69aad93" },
      "us-west-2"           : { "AMI" : "ami-f032acc0" },
      "sa-east-1"           : { "AMI" : "ami-d78325ca" },
      "ap-southeast-2"      : { "AMI" : "ami-3bae3201" },
      "eu-west-1"           : { "AMI" : "ami-f3e30084" }
    },

    "keys" : {
          "dev"            : { "keypair" : "tbp_dev"},
          "qa"             : { "keypair" : "tbp_qa" },
          "sandbox"        : { "keypair" : "tbp_sandbox"},
          "production"     : { "keypair" : "tbp_production"}
    },

    "subnets" : {
      "test"           : { "VPCSN" : "10.250.0.0/16", "PUSN" : "10.250.0.0/24", "PRSN" : "10.250.1.0/24", "GTSN" : "10.250.10.0/24", "ISSN" : "10.250.11.0/24" },
      "dev"            : { "VPCSN" : "10.4.0.0/16", "PUSN" : "10.4.0.0/24", "PRSN" : "10.4.1.0/24", "GTSN" : "10.4.10.0/24", "ISSN" : "10.4.11.0/24" },
      "qa"             : { "VPCSN" : "10.3.0.0/16", "PUSN" : "10.3.0.0/24", "PRSN" : "10.3.1.0/24", "GTSN" : "10.3.10.0/24", "ISSN" : "10.3.11.0/24" },
      "sandbox"        : { "VPCSN" : "10.2.0.0/16", "PUSN" : "10.2.0.0/24", "PRSN" : "10.2.1.0/24", "GTSN" : "10.2.10.0/24", "ISSN" : "10.2.11.0/24" },
      "production"     : { "VPCSN" : "10.1.0.0/16", "PUSN" : "10.1.0.0/24", "PRSN" : "10.1.1.0/24", "GTSN" : "10.1.10.0/24", "ISSN" : "10.1.11.0/24" }
    },

    "VPN" : {
      "smart"          : { "EP" : "186.64.109.138" },
      "broadcom"       : { "EP" : "190.99.116.194" }
    },

    "dot" : {
      "test"            : { "DOT" : ".test" },
      "dev"            : { "DOT" : ".dev" },
      "qa"             : { "DOT" : ".qa" },
      "sandbox"        : { "DOT" : ".sandbox" },
      "production"     : { "DOT" : "" }
    },

    "KernelId" : {
      "us-east-1"         : { "AKI" : "aki-919dcaf8" },
      "us-west-1"         : { "AKI" : "aki-880531cd" },
      "us-west-2"         : { "AKI" : "aki-fc8f11cc" },
      "sa-east-1"         : { "AKI" : "aki-5553f448" },
      "ap-southeast-2"    : { "AKI" : "aki-c362fff9" },
      "eu-west-1"         : { "AKI" : "aki-52a34525" }
    },

    "subnetZone" : {
      "us-west-1"           : { "ZONE" : "us-west-1c" },
      "us-west-2"           : { "ZONE" : "us-west-2b" },
      "sa-east-1"           : { "ZONE" : "sa-east-1a" },
      "us-east-1"           : { "ZONE" : "us-east-1a" },
      "ap-southeast-2"      : { "ZONE" : "ap-southeast-2a" },
      "eu-west-1"           : { "ZONE" : "eu-west-1a" }
    },
    "DnsRegion" : {
      "us-west-1"           : { "ZONE" : "us-west-1.compute.internal" },
      "us-west-2"           : { "ZONE" : "us-west-2.compute.internal" },
      "sa-east-1"           : { "ZONE" : "sa-east-1.compute.internal" },
      "us-east-1"           : { "ZONE" : "ec2.internal" },
      "eu-west-1"           : { "ZONE" : "eu-west-1.compute.internal" },
      "ap-southeast-2"      : { "ZONE" : "ap-southeast-2.compute.internal" }
    }
  },

  "Resources": {
    
    "vpc": {                      
      "Type": "AWS::EC2::VPC",
      "Properties": {
        "CidrBlock": { "Fn::FindInMap" : [ "subnets", { "Ref" : "Environment" }, "VPCSN" ]},
        "InstanceTenancy": "default",
        "EnableDnsSupport": "true",
        "EnableDnsHostnames": "true",
        "Tags": [
          {
            "Key": "Application",
            "Value": "Public API"
          },
          {
            "Key": "Environment",   
            "Value": { "Ref" : "Environment" }
          },
          {
            "Key": "Name",            
            "Value": "Public API VPC"
          }
        ]
      }
    },

    "subnetPrivateApis": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": { "Fn::FindInMap" : [ "subnets", { "Ref" : "Environment" }, "PRSN" ]},
        "AvailabilityZone": { "Fn::FindInMap" : [ "subnetZone", { "Ref" : "AWS::Region" }, "ZONE" ]},
        "VpcId": {
          "Ref": "vpc"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "Private APIs"
          },
          {
            "Key": "Application",
            "Value": "Public API"
          },
          {
            "Key": "Environment",
            "Value": { "Ref" : "Environment" }
          }
        ]
      }
    },

    "subnetWorkerGT": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": { "Fn::FindInMap" : [ "subnets", { "Ref" : "Environment" }, "GTSN" ]},
        "AvailabilityZone": { "Fn::FindInMap" : [ "subnetZone", { "Ref" : "AWS::Region" }, "ZONE" ]},
        "VpcId": {
          "Ref": "vpc"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "Iceland"
          },
          {
            "Key": "Application",
            "Value": "Public API"
          },
          {
            "Key": "Environment",
            "Value": { "Ref" : "Environment" }
          }
        ]
      }
    },

    "subnetWorkerIS": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": { "Fn::FindInMap" : [ "subnets", { "Ref" : "Environment" }, "ISSN" ]},
        "AvailabilityZone": { "Fn::FindInMap" : [ "subnetZone", { "Ref" : "AWS::Region" }, "ZONE" ]},
        "VpcId": {
          "Ref": "vpc"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "Guatemala"
          },
          {
            "Key": "Application",
            "Value": "Public API"
          },
          {
            "Key": "Environment",
            "Value": { "Ref" : "Environment" }
          }
        ]
      }
    },

    "subnetPublicApis": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": { "Fn::FindInMap" : [ "subnets", { "Ref" : "Environment" }, "PUSN" ]},
        "AvailabilityZone": { "Fn::FindInMap" : [ "subnetZone", { "Ref" : "AWS::Region" }, "ZONE" ]},
        "VpcId": {
          "Ref": "vpc"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "Public APIs"
          },
          {
            "Key": "Environment",
            "Value": { "Ref" : "Environment" }
          },
          {
            "Key": "Application",
            "Value": "Public API"
          }
        ]
      }
    },

    "igwPublicApi": {
      "Type": "AWS::EC2::InternetGateway",
      "Properties": {
        "Tags": [
          {
            "Key": "Environment",
            "Value": { "Ref" : "Environment" }
          },
          {
            "Key": "Application",
            "Value": "Public API"
          },
          {
            "Key": "Name",
            "Value": "Public API IGW"
          }
        ]
      }
    },

    "cgwPublicApi": {
      "Type": "AWS::EC2::CustomerGateway",
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "Public API CGW"
          },
          {
            "Key": "Environment",
            "Value": { "Ref" : "Environment" }
          },
          {
            "Key": "Application",
            "Value": "Public API"
          }
        ],
        "Type": "ipsec.1",
        "IpAddress": { "Fn::FindInMap" : [ "VPN", { "Ref" : "Provider" }, "EP" ]},
        "BgpAsn": "65000"
      }
    },

"vgwPublicApi": {
      "Type": "AWS::EC2::VPNGateway",
      "Properties": {
        "Type": "ipsec.1",
        "Tags": [
          {
            "Key": "Name",
            "Value": "Public API VPW"
          },
          {
            "Key": "Application",
            "Value": "Public API"
          },
          {
            "Key": "Environment",
            "Value": { "Ref" : "Environment" }
          }
        ]
      }
    },

    "doptPublicApi": {
      "Type": "AWS::EC2::DHCPOptions",
      "Properties": {
        "DomainName": { "Fn::FindInMap" : [ "DnsRegion", { "Ref" : "AWS::Region" }, "ZONE" ]},
        "DomainNameServers": [
          "AmazonProvidedDNS"
        ]
      }
    },

    "doptPublicApiBluekite": {
      "Type": "AWS::EC2::DHCPOptions",
      "Properties": {
        "DomainName": "bluekite.com",
        "DomainNameServers": [
          "AmazonProvidedDNS"
        ]
      }
    },

    "vpnHQ": {
      "Type": "AWS::EC2::VPNConnection",
      "Properties": {
        "Tags": [
          {
            "Key": "Environment",
            "Value": { "Ref" : "Environment" }
          },
          {
            "Key": "Name",
            "Value": "Public API VPN"
          },
          {
            "Key": "Application",
            "Value": "Public API"
          }
        ],
        "Type": "ipsec.1",
        "VpnGatewayId": {
          "Ref": "vgwPublicApi"
        },
        "CustomerGatewayId": {
          "Ref": "cgwPublicApi"
        }
      }
    },

    "aclPublicApi": {
      "Type": "AWS::EC2::NetworkAcl",
      "Properties": {
        "VpcId": {
          "Ref": "vpc"
        },
        "Tags": [
          {
            "Key": "Environment",
            "Value": { "Ref" : "Environment" }
          },
          {
            "Key": "Application",
            "Value": "Public API"
          },
          {
            "Key": "Name",
            "Value": "Public API ACL"
          }
        ]
      }
    },

    "rtbPrivateSubnets": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "vpc"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "Public API Private Routes"
          },
          {
            "Key": "Applilcation",
            "Value": "Public API"
          },
          {
            "Key": "Environment",
            "Value": { "Ref" : "Environment" }
          }
        ]
      }
    },
    "rtbPublicSubnet": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "vpc"
        },
        "Tags": [
          {
            "Key": "Application",
            "Value": "Public API"
          },
          {
            "Key": "Name",
            "Value": "Public API Public Routes"
          },
          {
            "Key": "Environment",
            "Value": { "Ref" : "Environment" }
          }
        ]
      }
    },

    "instanceNAT": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "DisableApiTermination": "FALSE",
        "ImageId": { "Fn::FindInMap" : [ "NATMap", { "Ref" : "AWS::Region" }, "AMI" ]},
        "InstanceType": "t1.micro",
        "KernelId": { "Fn::FindInMap" : [ "KernelId", { "Ref" : "AWS::Region" }, "AKI" ]},
        "KeyName": { "Fn::FindInMap" : [ "keys", { "Ref" : "Environment" }, "keypair" ]},
        "SourceDestCheck" : "false",
        "Monitoring": "false",
        "Tags": [
          {
            "Key": "Environment",
            "Value": { "Ref" : "Environment" }
          },
          {
            "Key": "Application",
            "Value": "Public API"
          },
          {
            "Key": "Name",
            "Value": { "Fn::Join" : [ ".", ["nat", { "Ref" : "Environment"} ] ] }
          }
        ],
        "NetworkInterfaces": [
          {
            "DeleteOnTermination": "true",
            "Description": "Primary network interface",
            "DeviceIndex": 0,
            "SubnetId": { "Ref": "subnetPublicApis"},
            "GroupSet": [
              {
                "Ref": "sgNat"
              }
            ],
            "AssociatePublicIpAddress": "true"
          }
        ]
      }
    },

    "BastionNetworkInterface": {
      "Type" : "AWS::EC2::NetworkInterface",
      "Properties" : {
        "SourceDestCheck" : true,
        "SubnetId" : {"Ref" : "subnetPublicApis"}
      }
    },

    "Bastion" : {
      "Type" : "AWS::EC2::Instance",

      "Properties" : {
        "ImageId" : { "Fn::FindInMap" : [ "NATMap", { "Ref" : "AWS::Region" }, "AMI" ]},
        "KeyName" : { "Fn::FindInMap" : [ "keys", { "Ref" : "Environment" }, "keypair" ]},
        "InstanceType" : "t1.micro",

        "SecurityGroupIds" : [ {"Ref" : "sgBastion"} ],
        "SubnetId" : { "Ref" : "subnetPublicApis" },
        "Tags" : [ {"Key" : "Name", "Value" : { "Fn::Join" : [ ".", ["bastion", { "Ref" : "Environment"} ] ] } } ]
      }
    },

    "IPAddress" : {
      "Type" : "AWS::EC2::EIP",
      "Properties" : {
        "Domain" : "vpc",
        "InstanceId" : { "Ref" : "Bastion" }
      }
    },

    "DNSRecord" : {
      "Type" : "AWS::Route53::RecordSet",
      "Properties" : {
        "HostedZoneName" : "bluekite.com.",
        "Comment" : "DNS name for my instance.",
        "Name" : { "Fn::Join" : [ "", ["bastion", { "Fn::FindInMap" : [ "dot", { "Ref" : "Environment" }, "DOT" ]},".bluekite.com"]]},
        "Type" : "CNAME",
        "TTL" : "300",
        "ResourceRecords" : [ { "Fn::GetAtt" : [ "Bastion", "PublicDnsName" ] } ]
      },
      "DependsOn" : "IPAddress"
    },

    "sgMonitors": {
      "Type": "AWS::EC2::SecurityGroup",
      "DependsOn": "sgBastion",
      "Properties": {
        "GroupDescription": "Redis Monitor Service",
        "VpcId": {
          "Ref": "vpc"
        },
        "SecurityGroupIngress": [
          {
            "IpProtocol": "icmp",
            "FromPort": "-1",
            "ToPort": "-1",
            "CidrIp": "0.0.0.0/0"
          },
          {
            "IpProtocol": "tcp",
            "FromPort": "80",
            "ToPort": "80",
            "CidrIp": { "Fn::FindInMap" : [ "subnets", { "Ref" : "Environment" }, "VPCSN" ]}
          },
          {
            "IpProtocol": "tcp",
            "FromPort": "80",
            "ToPort": "80",
            "CidrIp": "192.168.0.0/16"
          },
          {
            "IpProtocol": "tcp",
            "FromPort": "22",
            "ToPort": "22",
            "CidrIp": "192.168.0.0/24"
          },
          {
            "IpProtocol": "tcp",
            "FromPort": "6379",
            "ToPort": "6379",
            "CidrIp": { "Fn::FindInMap" : [ "subnets", { "Ref" : "Environment" }, "VPCSN" ]}
          },
          {
            "IpProtocol": "tcp",
            "FromPort": "6379",
            "ToPort": "6379",
            "CidrIp": "192.168.0.0/16"
          },
          {
            "IpProtocol": "udp",
            "FromPort": "53",
            "ToPort": "53",
            "CidrIp": { "Fn::FindInMap" : [ "subnets", { "Ref" : "Environment" }, "VPCSN" ]}
          },
                    {
            "IpProtocol": "udp",
            "FromPort": "53",
            "ToPort": "53",
            "CidrIp": "192.168.0.0/24"
          }
        ],
        "SecurityGroupEgress": [
          {
            "IpProtocol": "-1",
            "CidrIp": "0.0.0.0/0"
          }
        ]
      }
    },

    "sgPrivateApis": {
      "Type": "AWS::EC2::SecurityGroup",
      "DependsOn": "sgBastion",
      "Properties": {
        "GroupDescription": "Private APIs",
        "VpcId": {
          "Ref": "vpc"
        },
        "SecurityGroupIngress": [
          {
            "IpProtocol": "icmp",
            "FromPort": "-1",
            "ToPort": "-1",
            "CidrIp": "0.0.0.0/0"
          },
          {
            "IpProtocol": "tcp",
            "FromPort": "443",
            "ToPort": "443",
            "CidrIp": { "Fn::FindInMap" : [ "subnets", { "Ref" : "Environment" }, "VPCSN" ]}
          },
                    {
            "IpProtocol": "tcp",
            "FromPort": "443",
            "ToPort": "443",
            "CidrIp": "192.168.0.0/24"
          },
          {
            "IpProtocol": "tcp",
            "FromPort": "80",
            "ToPort": "80",
            "CidrIp": { "Fn::FindInMap" : [ "subnets", { "Ref" : "Environment" }, "VPCSN" ]}
          },
                    {
            "IpProtocol": "tcp",
            "FromPort": "80",
            "ToPort": "80",
            "CidrIp": "192.168.0.0/24"
          },
          {
            "IpProtocol": "tcp",
            "FromPort": "6379",
            "ToPort": "6379",
            "CidrIp": { "Fn::FindInMap" : [ "subnets", { "Ref" : "Environment" }, "VPCSN" ]}
          },
          {
            "IpProtocol": "tcp",
            "FromPort": "6379",
            "ToPort": "6379",
            "CidrIp": "192.168.0.0/16"
          },
          {
            "IpProtocol": "tcp",
            "FromPort": "22",
            "ToPort": "22",
            "CidrIp": "186.151.60.250/32"
          },
          {
            "IpProtocol": "tcp",
            "FromPort": "11300",
            "ToPort": "11300",
            "CidrIp": "192.168.0.0/24"
          },
          {
            "IpProtocol": "tcp",
            "FromPort": "11300",
            "ToPort": "11300",
            "CidrIp": "192.168.0.0/16"
          },
          {
            "IpProtocol": "udp",
            "FromPort": "53",
            "ToPort": "53",
            "CidrIp": { "Fn::FindInMap" : [ "subnets", { "Ref" : "Environment" }, "VPCSN" ]}
          },
          {
            "IpProtocol": "udp",
            "FromPort": "53",
            "ToPort": "53",
            "CidrIp": "192.168.0.0/24"
          }
        ],
        "SecurityGroupEgress": [
          {
            "IpProtocol": "-1",
            "CidrIp": "0.0.0.0/0"
          }
        ]
      }
    },

    "sgLogstash": {
      "Type": "AWS::EC2::SecurityGroup",
      "DependsOn": "sgBastion",
      "Properties": {
        "GroupDescription": "Private APIs",
        "VpcId": {
          "Ref": "vpc"
        },
        "SecurityGroupIngress": [
          {
            "IpProtocol": "icmp",
            "FromPort": "-1",
            "ToPort": "-1",
            "CidrIp": "0.0.0.0/0"
          },
          {
            "IpProtocol": "tcp",
            "FromPort": "22",
            "ToPort": "22",
            "CidrIp": "192.168.0.0/24"
          },
          {
            "IpProtocol": "tcp",
            "FromPort": "80",
            "ToPort": "80",
            "CidrIp": { "Fn::FindInMap" : [ "subnets", { "Ref" : "Environment" }, "VPCSN" ]}
          },
          {
            "IpProtocol": "tcp",
            "FromPort": "80",
            "ToPort": "80",
            "CidrIp": "192.168.0.0/24"
          },
          {
            "IpProtocol": "tcp",
            "FromPort": "6379",
            "ToPort": "6379",
            "CidrIp": "192.168.0.0/24"
          },
          {
            "IpProtocol": "tcp",
            "FromPort": "6379",
            "ToPort": "6379",
            "CidrIp": { "Fn::FindInMap" : [ "subnets", { "Ref" : "Environment" }, "VPCSN" ]}
          },
          {
            "IpProtocol": "tcp",
            "FromPort": "9200",
            "ToPort": "9200",
            "CidrIp": "192.168.0.0/24"
          },
          {
            "IpProtocol": "tcp",
            "FromPort": "9200",
            "ToPort": "9200",
            "CidrIp": { "Fn::FindInMap" : [ "subnets", { "Ref" : "Environment" }, "VPCSN" ]}
          },
          {
            "IpProtocol": "tcp",
            "FromPort": "5001",
            "ToPort": "5001",
            "CidrIp": "192.168.0.0/24"
          },
          {
            "IpProtocol": "tcp",
            "FromPort": "5001",
            "ToPort": "5001",
            "CidrIp": { "Fn::FindInMap" : [ "subnets", { "Ref" : "Environment" }, "VPCSN" ]}
          },
          {
            "IpProtocol": "udp",
            "FromPort": "5001",
            "ToPort": "5001",
            "CidrIp": "192.168.0.0/24"
          },
          {
            "IpProtocol": "udp",
            "FromPort": "5001",
            "ToPort": "5001",
            "CidrIp": { "Fn::FindInMap" : [ "subnets", { "Ref" : "Environment" }, "VPCSN" ]}
          },
          {
            "IpProtocol": "udp",
            "FromPort": "53",
            "ToPort": "53",
            "CidrIp": { "Fn::FindInMap" : [ "subnets", { "Ref" : "Environment" }, "VPCSN" ]}
          },
          {
            "IpProtocol": "udp",
            "FromPort": "53",
            "ToPort": "53",
            "CidrIp": "192.168.0.0/24"
          }
        ],
        "SecurityGroupEgress": [
          {
            "IpProtocol": "-1",
            "CidrIp": "0.0.0.0/0"
          }
        ]
      }
    },

    "sgBastion": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "SHH Connections",
        "VpcId": {
          "Ref": "vpc"
        },
        "SecurityGroupIngress": [
          {
            "IpProtocol": "tcp",
            "FromPort": "22",
            "ToPort": "22",
            "CidrIp": "0.0.0.0/0"
          }
        ],
        "SecurityGroupEgress": [
          {
            "IpProtocol": "tcp",
            "FromPort": "22",
            "ToPort": "22",
            "CidrIp": "0.0.0.0/0"
          }
        ]
      }
    },

    "sgOpenswan": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "SHH Connections",
        "VpcId": {
          "Ref": "vpc"
        },
        "SecurityGroupIngress": [
          {
            "IpProtocol": "icmp",
            "FromPort": "-1",
            "ToPort": "-1",
            "CidrIp": "0.0.0.0/0"
          },
          {
            "IpProtocol": "tcp",
            "FromPort": "22",
            "ToPort": "22",
            "CidrIp": "192.168.0.0/24"
          },
          {
            "IpProtocol": "udp",
            "FromPort": "500",
            "ToPort": "500",
            "CidrIp": "0.0.0.0/0"
          },
          {
            "IpProtocol": "tcp",
            "FromPort": "4500",
            "ToPort": "4500",
            "CidrIp": "0.0.0.0/0"
          }
        ],
        "SecurityGroupEgress": [
          {
            "IpProtocol": "-1",
            "CidrIp": "0.0.0.0/0"
          }
        ]
      }
    },

    "sgNat": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "Public API NAT",
        "VpcId": {
          "Ref": "vpc"
        },
        "SecurityGroupIngress": [
          {
            "IpProtocol": "icmp",
            "FromPort": "-1",
            "ToPort": "-1",
            "CidrIp": "0.0.0.0/0"
          },
          {
            "IpProtocol": "-1",
            "FromPort": "-1",
            "ToPort": "-1",
            "CidrIp": { "Fn::FindInMap" : [ "subnets", { "Ref" : "Environment" }, "VPCSN" ]}
          },
          {
            "IpProtocol": "tcp",
            "FromPort": "9418",
            "ToPort": "9418",
            "CidrIp": "0.0.0.0/0"
          },
          {
            "IpProtocol": "tcp",
            "FromPort": "80",
            "ToPort": "80",
            "CidrIp": "0.0.0.0/0"
          },

          {
            "IpProtocol": "tcp",
            "FromPort": "8080",
            "ToPort": "8080",
            "CidrIp": "192.168.0.0/16"
          },
          {
            "IpProtocol": "tcp",
            "FromPort": "8080",
            "ToPort": "8080",
            "CidrIp": "186.151.60.250/32"
          },
          {
            "IpProtocol": "tcp",
            "FromPort": "8080",
            "ToPort": "8080",
            "CidrIp": "190.99.116.194/32"
          },
                    {
            "IpProtocol": "tcp",
            "FromPort": "8080",
            "ToPort": "8080",
            "CidrIp": "186.64.109.138/32"
          },
          {
            "IpProtocol": "tcp",
            "FromPort": "22",
            "ToPort": "22",
            "CidrIp": "192.168.0.0/24"
          },
          {
            "IpProtocol": "tcp",
            "FromPort": "443",
            "ToPort": "443",
            "CidrIp": "0.0.0.0/0"
          },
          {
            "IpProtocol": "tcp",
            "FromPort": "6379",
            "ToPort": "6379",
            "CidrIp": { "Fn::FindInMap" : [ "subnets", { "Ref" : "Environment" }, "VPCSN" ]}
          },
                    {
            "IpProtocol": "tcp",
            "FromPort": "6379",
            "ToPort": "6379",
            "CidrIp": "192.168.0.0/24"
          },
          {
            "IpProtocol": "tcp",
            "FromPort": "11300",
            "ToPort": "11300",
            "CidrIp": "192.168.0.0/24"
          },
          {
            "IpProtocol": "tcp",
            "FromPort": "11300",
            "ToPort": "11300",
            "CidrIp": { "Fn::FindInMap" : [ "subnets", { "Ref" : "Environment" }, "VPCSN" ]}
          },
          {
            "IpProtocol": "udp",
            "FromPort": "53",
            "ToPort": "53",
            "CidrIp": { "Fn::FindInMap" : [ "subnets", { "Ref" : "Environment" }, "VPCSN" ]}
          },
          {
            "IpProtocol": "udp",
            "FromPort": "53",
            "ToPort": "53",
            "CidrIp": "192.168.0.0/24"
          }
        ],
        "SecurityGroupEgress": [
          {
            "IpProtocol": "-1",
            "CidrIp": "0.0.0.0/0"
          }
        ]
      }
    },

    "sgdefault": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "default VPC security group",
        "VpcId": {
          "Ref": "vpc"
        },
        "SecurityGroupEgress": [
          {
            "IpProtocol": "-1",
            "CidrIp": "0.0.0.0/0"
          }
        ]
      }
    },

    "sgGTAccounts": {
      "Type": "AWS::EC2::SecurityGroup",
      "DependsOn": "sgBastion",
      "Properties": {
        "GroupDescription": "Guatemala accounts applications",
        "VpcId": {
          "Ref": "vpc"
        },
         "SecurityGroupIngress": [   
          {
            "IpProtocol": "icmp",
            "FromPort": "-1",
            "ToPort": "-1",
            "CidrIp": "0.0.0.0/0"
          },
          {
            "IpProtocol": "tcp",
            "FromPort": "22",
            "ToPort": "22",
            "CidrIp": "192.168.0.0/24"
          },
          {
            "IpProtocol": "tcp",
            "FromPort": "6379",
            "ToPort": "6379",
            "CidrIp": { "Fn::FindInMap" : [ "subnets", { "Ref" : "Environment" }, "VPCSN" ]}
          },
          {
            "IpProtocol": "tcp",
            "FromPort": "6379",
            "ToPort": "6379",
            "CidrIp": "192.168.0.0/24"
          },
          {
            "IpProtocol": "tcp",
            "FromPort": "80",
            "ToPort": "80",
            "CidrIp": "10.3.0.0/0"
          },
          {
            "IpProtocol": "tcp",
            "FromPort": "80",
            "ToPort": "80",
            "CidrIp": "192.168.0.0/24"
          },
          {
            "IpProtocol": "tcp",
            "FromPort": "11300",
            "ToPort": "11300",
            "CidrIp": { "Fn::FindInMap" : [ "subnets", { "Ref" : "Environment" }, "VPCSN" ]}
          },
                    {
            "IpProtocol": "tcp",
            "FromPort": "11300",
            "ToPort": "11300",
            "CidrIp": "192.168.0.0/24"
          },
          {
            "IpProtocol": "udp",
            "FromPort": "53",
            "ToPort": "53",
            "CidrIp": { "Fn::FindInMap" : [ "subnets", { "Ref" : "Environment" }, "VPCSN" ]}
          },
          {
            "IpProtocol": "udp",
            "FromPort": "53",
            "ToPort": "53",
            "CidrIp": "192.168.0.0/24"
          }
        ],
       "SecurityGroupEgress": [
          {
            "IpProtocol": "-1",
            "CidrIp": "0.0.0.0/0"
          }
        ]
      }
    },

    "sgISAccounts": {
      "Type": "AWS::EC2::SecurityGroup",
      "DependsOn": "sgBastion",
      "Properties": {
        "GroupDescription": "Guatemala accounts applications",
        "VpcId": {
          "Ref": "vpc"
        },
        "SecurityGroupIngress": [
          {
            "IpProtocol": "icmp",
            "FromPort": "-1",
            "ToPort": "-1",
            "CidrIp": "0.0.0.0/0"
          },
          {
            "IpProtocol": "tcp",
            "FromPort": "22",
            "ToPort": "22",
            "CidrIp": "192.168.0.0/24"
          },
          {
            "IpProtocol": "tcp",
            "FromPort": "6379",
            "ToPort": "6379",
            "CidrIp": { "Fn::FindInMap" : [ "subnets", { "Ref" : "Environment" }, "VPCSN" ]}
          },
          {
            "IpProtocol": "tcp",
            "FromPort": "6379",
            "ToPort": "6379",
            "CidrIp": "192.168.0.0/24"
          },
          {
            "IpProtocol": "tcp",
            "FromPort": "80",
            "ToPort": "80",
            "CidrIp": "10.3.0.0/0"
          },
          {
            "IpProtocol": "tcp",
            "FromPort": "80",
            "ToPort": "80",
            "CidrIp": "192.168.0.0/24"
          },
          {
            "IpProtocol": "tcp",
            "FromPort": "11300",
            "ToPort": "11300",
            "CidrIp": { "Fn::FindInMap" : [ "subnets", { "Ref" : "Environment" }, "VPCSN" ]}
          },
                    {
            "IpProtocol": "tcp",
            "FromPort": "11300",
            "ToPort": "11300",
            "CidrIp": "192.168.0.0/24"
          },
          {
            "IpProtocol": "udp",
            "FromPort": "53",
            "ToPort": "53",
            "CidrIp": { "Fn::FindInMap" : [ "subnets", { "Ref" : "Environment" }, "VPCSN" ]}
          },
          {
            "IpProtocol": "udp",
            "FromPort": "53",
            "ToPort": "53",
            "CidrIp": "192.168.0.0/24"
          }
        ],
       "SecurityGroupEgress": [
          {
            "IpProtocol": "-1",
            "CidrIp": "0.0.0.0/0"
          }
        ]
      }
    },

    "sgPublicApis": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "Public facing services",
        "VpcId": {
          "Ref": "vpc"
        },
        "SecurityGroupIngress": [
          {
            "IpProtocol": "icmp",
            "FromPort": "-1",
            "ToPort": "-1",
            "CidrIp": "0.0.0.0/0"
          },
          {
            "IpProtocol": "tcp",
            "FromPort": "22",
            "ToPort": "22",
            "CidrIp": "192.168.0.0/16"
          },
          {
            "IpProtocol": "tcp",
            "FromPort": "80",
            "ToPort": "80",
            "CidrIp": "0.0.0.0/0"
          },
          {
            "IpProtocol": "tcp",
            "FromPort": "443",
            "ToPort": "443",
            "CidrIp": "0.0.0.0/0"
          }
        ],
        "SecurityGroupEgress": [
          {
            "IpProtocol": "-1",
            "CidrIp": "0.0.0.0/0"
          }
        ]
      },
      "DependsOn": "sgBastion"
    },

    "acl5": {
      "Type": "AWS::EC2::NetworkAclEntry",
      "Properties": {
        "CidrBlock": "0.0.0.0/0",
        "Egress": true,
        "Protocol": "-1",
        "RuleAction": "allow",
        "RuleNumber": "100",
        "NetworkAclId": {
          "Ref": "aclPublicApi"
        }
      }
    },

    "acl6": {
      "Type": "AWS::EC2::NetworkAclEntry",
      "Properties": {
        "CidrBlock": "0.0.0.0/0",
        "Protocol": "-1",
        "RuleAction": "allow",
        "RuleNumber": "100",
        "NetworkAclId": {
          "Ref": "aclPublicApi"
        }
      }
    },

    "subnetacl5": {
      "Type": "AWS::EC2::SubnetNetworkAclAssociation",
      "Properties": {
        "NetworkAclId": {
          "Ref": "aclPublicApi"
        },
        "SubnetId": {
          "Ref": "subnetPublicApis"
        }
      }
    },

    "subnetacl6": {
      "Type": "AWS::EC2::SubnetNetworkAclAssociation",
      "Properties": {
        "NetworkAclId": {
          "Ref": "aclPublicApi"
        },
        "SubnetId": {
          "Ref": "subnetPrivateApis"
        }
      }
    },

    "gw3": {
      "Type": "AWS::EC2::VPCGatewayAttachment",
      "Properties": {
        "VpcId": {
          "Ref": "vpc"
        },
        "InternetGatewayId": {
          "Ref": "igwPublicApi"
        }
      }
    },
    "gw4": {
      "Type": "AWS::EC2::VPCGatewayAttachment",
      "Properties": {
        "VpcId": {
          "Ref": "vpc"
        },
        "VpnGatewayId": {
          "Ref": "vgwPublicApi"
        }
      }
    },
    "subnetroute4": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "rtbPublicSubnet"
        },
        "SubnetId": {
          "Ref": "subnetPublicApis"
        }
      }
    },

    "subnetroute5": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "rtbPrivateSubnets"
        },
        "SubnetId": {
          "Ref": "subnetPrivateApis"
        }
      }
    },

    "subnetroute6": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "rtbPrivateSubnets"
        },
        "SubnetId": {
          "Ref": "subnetWorkerGT"
        }
      }
    },
    "route6": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "DestinationCidrBlock": "192.168.0.0/24",
        "RouteTableId": {
          "Ref": "rtbPrivateSubnets"
        },
        "GatewayId": {
          "Ref": "vgwPublicApi"
        }
      },
      "DependsOn": "gw4"
    },
    "route7": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "DestinationCidrBlock": "0.0.0.0/0",
        "RouteTableId": {
          "Ref": "rtbPrivateSubnets"
        },
        "InstanceId": {
          "Ref": "instanceNAT"
        }
      }
    },

    "subnetroute8": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "rtbPrivateSubnets"
        },
        "SubnetId": {
          "Ref": "subnetWorkerIS"
        }
      }
    },
    "route8": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "DestinationCidrBlock": "192.168.0.0/24",
        "RouteTableId": {
          "Ref": "rtbPublicSubnet"
        },
        "GatewayId": {
          "Ref": "vgwPublicApi"
        }
      },
      "DependsOn": "gw4"
    },
    "route9": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "DestinationCidrBlock": "0.0.0.0/0",
        "RouteTableId": {
          "Ref": "rtbPublicSubnet"
        },
        "GatewayId": {
          "Ref": "igwPublicApi"
        }
      },
      "DependsOn": "gw3"
    },

    "dchpassoc2": {
      "Type": "AWS::EC2::VPCDHCPOptionsAssociation",
      "Properties": {
        "VpcId": {
          "Ref": "vpc"
        },
        "DhcpOptionsId": {
          "Ref": "doptPublicApi"
        }
      }
    },

    "ingress14": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgMonitors"
        },
        "IpProtocol": "tcp",
        "FromPort": "22",
        "ToPort": "22",
        "SourceSecurityGroupId": {
          "Ref": "sgBastion"
        },
        "SourceSecurityGroupOwnerId": "243238936187"
      }
    },

    "ingress15": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgPrivateApis"
        },
        "IpProtocol": "tcp",
        "FromPort": "22",
        "ToPort": "22",
        "SourceSecurityGroupId": {
          "Ref": "sgBastion"
        },
        "SourceSecurityGroupOwnerId": "243238936187"
      }
    },

    "ingress16": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgNat"
        },
        "IpProtocol": "tcp",
        "FromPort": "22",
        "ToPort": "22",
        "SourceSecurityGroupId": {
          "Ref": "sgBastion"
        },
        "SourceSecurityGroupOwnerId": "243238936187"
      }
    },

    "ingress17": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgdefault"
        },
        "IpProtocol": "-1",
        "SourceSecurityGroupId": {
          "Ref": "sgdefault"
        },
        "SourceSecurityGroupOwnerId": "243238936187"
      }
    },

    "ingress18": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgPublicApis"
        },
        "IpProtocol": "tcp",
        "FromPort": "22",
        "ToPort": "22",
        "SourceSecurityGroupId": {
          "Ref": "sgBastion"
        },
        "SourceSecurityGroupOwnerId": "243238936187"
      }
    },

    "ingress19": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgOpenswan"
        },
        "IpProtocol": "tcp",
        "FromPort": "22",
        "ToPort": "22",
        "SourceSecurityGroupId": {
          "Ref": "sgBastion"
        },
        "SourceSecurityGroupOwnerId": "243238936187"
      }
    },

    "ingress20": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgMonitors"
        },
        "IpProtocol": "tcp",
        "FromPort": "22",
        "ToPort": "22",
        "SourceSecurityGroupId": {
          "Ref": "sgBastion"
        },
        "SourceSecurityGroupOwnerId": "243238936187"
      }
    },

    "ingress21": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgLogstash"
        },
        "IpProtocol": "tcp",
        "FromPort": "22",
        "ToPort": "22",
        "SourceSecurityGroupId": {
          "Ref": "sgBastion"
        },
        "SourceSecurityGroupOwnerId": "243238936187"
      }
    },

    "ingress22": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgPrivateApis"
        },
        "IpProtocol": "tcp",
        "FromPort": "80",
        "ToPort": "80",
        "SourceSecurityGroupId": {
          "Ref": "sgPublicApis"
        },
        "SourceSecurityGroupOwnerId": "243238936187"
      }
    },

    "ingress23": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgPrivateApis"
        },
        "IpProtocol": "tcp",
        "FromPort": "22",
        "ToPort": "22",
        "SourceSecurityGroupId": {
          "Ref": "sgBastion"
        },
        "SourceSecurityGroupOwnerId": "243238936187"
      }
    },

    "ingress24": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgGTAccounts"
        },
        "IpProtocol": "tcp",
        "FromPort": "22",
        "ToPort": "22",
        "SourceSecurityGroupId": {
          "Ref": "sgBastion"
        },
        "SourceSecurityGroupOwnerId": "243238936187"
      }
    },

    "ingress25": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgISAccounts"
        },
        "IpProtocol": "tcp",
        "FromPort": "22",
        "ToPort": "22",
        "SourceSecurityGroupId": {
          "Ref": "sgBastion"
        },
        "SourceSecurityGroupOwnerId": "243238936187"
      }
    },

    "ingress26": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgPublicApis"
        },
        "IpProtocol": "tcp",
        "FromPort": "22",
        "ToPort": "22",
        "SourceSecurityGroupId": {
          "Ref": "sgBastion"
        },
        "SourceSecurityGroupOwnerId": "243238936187"
      }
    }
  },

  "Description": "Public API VPC"
}