{
  "AWSTemplateFormatVersion" : "2010-09-09",

  "Description" : "This stack generates the Accounts SV instance - filename:accounts.sv.template",

 "Mappings" : {
    "RegionMap" : {
      "sa-east-1"      : {"AMI" : "ami-d545e5c8" },
      "us-west-1"      : {"AMI" : "ami-82b98bc7" },
      "ap-northeast-1" : {"AMI" : "ami-35bbd334" },
      "ap-southeast-1" : {"AMI" : "ami-605c0a32" },
      "ap-southeast-2" : {"AMI" : "ami-fb4bd5c1" },
      "eu-west-1"      : {"AMI" : "ami-d03dcaa7" },
      "us-east-1"      : {"AMI" : "ami-cdc2fda4" },
      "us-west-2"      : {"AMI" : "ami-9a9dfdaa" }
    },

    "dot" : {
      "test"           : { "DOT" : ".test" },
      "dev"            : { "DOT" : ".dev" },
      "qa"             : { "DOT" : ".qa" },
      "sandbox"        : { "DOT" : ".sandbox" },
      "production"     : { "DOT" : "" }
    }
  },

  "Parameters" : {
    "Environment" : {
      "Type" : "String",
      "Description" : "Environment for the accounts-sv, i.e. dev, production, etc.",
      "Default" : ""
    },

    "DeployBranch" : {
      "Type" : "String",
      "Description" : "Git branch where to deploy the code from.",
      "Default" : ""
    },

    "SubnetId" : {
      "Type" : "String",
      "Description" : "El Salvador Accounts SubnetId in your Virtual Private Cloud (VPC)",
      "Default": "subnet-"

    },

    "KeyName" : {
      "Type" : "String",
      "Description" : "The SSH access key",
      "Default" : "tbp_"
    },

    "InstanceType" : {
      "Description" : "WebServer EC2 instance type",
      "Type" : "String",
      "Default" : "m3.medium",
      "AllowedValues" : [ "t1.micro","m1.small","m3.medium","m1.large","m1.xlarge","m2.xlarge","m2.2xlarge","m2.4xlarge","m3.xlarge","m3.2xlarge","c1.medium","c1.xlarge","cc1.4xlarge","cc2.8xlarge","cg1.4xlarge"],
      "ConstraintDescription" : "must be a valid EC2 instance type."
    },

    "StackID" : {
      "Type" : "String",
      "Description" : "Stack ID name",
      "Default" : "-"
    },

    "SecurityGroupId" : {
      "Type" : "String",
      "Description" : "Security Group of the VPC",
      "Default" : "sg-"
    }
  },

  "Resources" : {

   "AccountsSvInstance" : {

      "Type" : "AWS::EC2::Instance",
      "Metadata" : {
        "Comment" : "Accounts SV instance"
      },

      "Properties" : {
        "ImageId" : { "Fn::FindInMap" : [ "RegionMap", { "Ref" : "AWS::Region" }, "AMI" ]},
        "SecurityGroupIds" : [ {"Ref" : "SecurityGroupId"} ],
        "SubnetId" : { "Ref" : "SubnetId" },
        "InstanceType" : { "Ref" : "InstanceType" },
        "KeyName" : { "Ref" : "KeyName" },
        "Tags" : [ {"Key" : "Application", "Value" : { "Ref" : "AWS::StackId"} },
          {"Key" : "Name", "Value" : { "Fn::Join" : [ ".", ["accounts.sv", { "Ref" : "Environment"} ] ] } } ],
        "UserData"       : { "Fn::Base64" : { "Fn::Join" : ["", [
          "#!/bin/bash\n",
          
          "# Helper function to notify of failed operation\n",
          "function error_exit\n",
          "{\n",
          "  cfn-signal -e 1 -r \"$1\" '", { "Ref" : "AccountsSVWaitHandle" }, "'\n",
          "  exit 1\n",
          "}\n",
          
          "# Run Instance default configuration via CloudFormation::Init\n",
          "cfn-init -v --region ", { "Ref" : "AWS::Region" },
          "    -s ", { "Ref" : "AWS::StackId" },
          " -r AccountsSvInstance",
          " -c default",
          " || error_exit 'Failed to run cfn-init'\n",
          
          "# Register Github fingerprints\n",
          "ssh-keygen -f ~/.ssh/known_hosts -H -F github.com | grep -q found || ssh-keyscan -H github.com >> ~/.ssh/known_hosts\n",
                      "# Copy credentials to root user\n",
          "cp /home/ubuntu/.ssh/* /root/.ssh/\n",
          
          "# Clone app repo to ubuntu user home\n",
          "git clone git@github.com:blue-kite/accounts.git -b ", {"Ref" : "DeployBranch"}, " /home/ubuntu/accounts" , " > /tmp/git.log 2>&1 || error_exit 'Failed to clone repo'\n",
          "chown ubuntu:ubuntu -R /home/ubuntu/accounts\n",

          "# Add FQDN on etc/environment\n",
          "echo ", { "Fn::Join" : [ "" , ["FACTER_accounts_fqdn=accounts", { "Ref" : "StackID" }, ".sv", { "Fn::FindInMap" : [ "dot", { "Ref" : "Environment" }, "DOT" ]}, ".bluekite.com" ]]}, ">> /etc/environment\n",
          "echo ", "STACKID=", { "Ref" : "StackID" }, ">> /etc/environment\n",

          "# Install puppet via gems\n",
          "sudo gem install puppet --no-rdoc --no-ri > /tmp/gem-puppet.log 2>&1 || error_exit 'Failed install puppet gem'\n",

          "# Install Librarian Ruby\n",
          "sudo gem install librarian-puppet -v 1.0.3 --no-rdoc --no-ri > /tmp/gem-librarian-puppet.log 2>&1 || error_exit 'Failed install librarian puppet gem'\n",
          
          "# Install application's dependencies via puppet\n",
          "cd /home/ubuntu/accounts/puppet\n",
          "export HOME=/home/ubuntu && librarian-puppet install --clean --verbose > /tmp/librarian-puppet.log 2>&1 || error_exit 'failed to install puppet submodules'\n",
          "cd /home/ubuntu/accounts\n",
          "sudo puppet apply --verbose --modulepath=puppet/modules puppet/manifests/aws-accounts-sv-",{"Ref":"Environment"},".pp > /tmp/puppet.log 2>&1 || error_exit 'failed to apply puppet manifests'\n",
          
          "# Signal setup is complete\n",
          "cfn-signal -e $? -r 'Completed configuration' '",
          {
              "Ref" : "AccountsSVWaitHandle"
          },
          "'\n"
        ]]}}
      }
    },

    "AccountsSVWaitHandle" : {
      "Type" : "AWS::CloudFormation::WaitConditionHandle"
    },

    "AccountsSVWaitCondition" : {
      "Type" : "AWS::CloudFormation::WaitCondition",
      "DependsOn" : "AccountsSvInstance",
      "Properties" : {
        "Handle" : {"Ref" : "AccountsSVWaitHandle"},
        "Timeout" : "2000"
      }
    },

    "DNSRecordAccountsSV" : {
      "Type" : "AWS::Route53::RecordSet",
      "Properties" : {
        "HostedZoneName" : "bluekite.com.",
        "Comment" : "DNS name for my instance.",
                "Name" : { "Fn::Join" : [ "", ["accounts", { "Ref" : "StackID" }, ".sv" , { "Fn::FindInMap" : [ "dot", { "Ref" : "Environment" }, "DOT" ]},".bluekite.com"]]},
        "Type" : "A",
        "TTL" : "900",
        "ResourceRecords" : [ { "Fn::GetAtt" : [ "AccountsSvInstance", "PrivateIp" ] } ]
      },
      "DependsOn" : "AccountsSvInstance"
    }
  },

  "Outputs" : {
    "AccountsSVInstanceId" : {
      "Value" : { "Ref" : "AccountsSvInstance" },
      "Description" : "Instance Id of newly created instance"
    }
  }
}