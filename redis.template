{
  "AWSTemplateFormatVersion" : "2010-09-09",

  "Description" : "Redis - Rails Aplication Instance",

  "Parameters" : {
    "KeyName": {
      "Description" : "Name of an existing EC2 KeyPair to enable SSH access to the instance",
      "Type": "String",
      "MinLength": "1",
      "MaxLength": "255",
      "AllowedPattern" : "[\\x20-\\x7E]*",
      "ConstraintDescription" : "can contain only ASCII characters.",
      "Default": "tbp_"
    },

    "InstanceType" : {
      "Description" : "WebServer EC2 instance type",
      "Type" : "String",
      "Default" : "m1.medium",
      "AllowedValues" : [ "t1.micro","m1.small","m1.medium","m1.large","m1.xlarge","m2.xlarge","m2.2xlarge","m2.4xlarge","m3.xlarge","m3.2xlarge","c1.medium","c1.xlarge","cc1.4xlarge","cc2.8xlarge","cg1.4xlarge"],
      "ConstraintDescription" : "must be a valid EC2 instance type."
    },

    "SubnetId" : {
      "Type" : "String",
      "Description" : "SubnetId of an existing subnet in your Virtual Private Cloud (VPC)",
      "Default": "subnet-"
    },

    "SecurityGroupId" : {
      "Type" : "String",
      "Description" : "SecurityGroupId of an existing subnet in your Virtual Private Cloud (VPC)",
      "Default": "sg-"
    },

    "DeployBranch" : {
      "Type" : "String",
      "Description" : "Git branch where to deploy the code from.",
      "Default" : ""
    },

    "Environment" : {
      "Type" : "String",
      "Description" : "Application's environment.",
      "Default" : ""
    },

    "Repository" : {
      "Type" : "String",
      "Description" : "Application's GitHub Repository.",
      "Default" : "git@github.com:blue-kite/redis.git"
    }

  },

  "Mappings" : {
    "RegionMap" : {
      "sa-east-1"      : {"AMI" : "ami-d545e5c8" },
      "us-west-1"      : {"AMI" : "ami-82b98bc7" },
      "ap-northeast-1" : {"AMI" : "ami-35bbd334" },
      "ap-southeast-1" : {"AMI" : "ami-605c0a32" },
      "ap-southeast-2" : {"AMI" : "ami-fb4bd5c1" },
      "eu-west-1"      : {"AMI" : "ami-d03dcaa7" },
      "us-east-1"      : {"AMI" : "ami-cdc2fda4" },
      "us-west-2"      : {"AMI" : "ami-9a9dfdaa" }
    },
    "dot" : {
      "test"            : { "DOT" : ".test" },
      "dev"            : { "DOT" : ".dev" },
      "qa"             : { "DOT" : ".qa" },
      "sandbox"        : { "DOT" : ".sandbox" },
      "production"     : { "DOT" : "" }
    }
  },

  "Resources" : {


    "DNSRecord" : {
      "Type" : "AWS::Route53::RecordSet",
      "Properties" : {
        "HostedZoneName" : "bluekite.com.",
        "Comment" : "DNS name for my instance.",
        "Name" : {"Fn::Join" : ["", ["redis",{ "Fn::FindInMap" : [ "dot", { "Ref" : "Environment" }, "DOT" ]},".bluekite.com."]]},
        "Type" : "A",
        "TTL" : "900",
        "ResourceRecords" : [ { "Fn::GetAtt" : [ "redisInstance", "PrivateIp" ] } ]
      },
      "DependsOn" : "redisInstance"
    },

    "redisInstance" : {
      "Type" : "AWS::EC2::Instance",
      "Metadata" : {
        "Comment" : "redis - Rails Aplication Instance"
      },
      "Properties" : {
        "ImageId" : { "Fn::FindInMap" : [ "RegionMap", { "Ref" : "AWS::Region" }, "AMI" ]},
        "SecurityGroupIds" : [ {"Ref" : "SecurityGroupId"} ],
        "SubnetId" : { "Ref" : "SubnetId" },
        "InstanceType" : { "Ref" : "InstanceType" },
        "KeyName" : { "Ref" : "KeyName" },
        "Tags" : [ {"Key" : "Application", "Value" : { "Ref" : "AWS::StackId"} },
                {"Key" : "Name", "Value" : { "Fn::Join" : [ ".", ["Redis", {"Ref" : "Environment"} ] ] } } ],
        "UserData"       : { "Fn::Base64" : { "Fn::Join" : ["", [
          "#!/bin/bash\n",

          "# Helper function to notify of failed operation\n",
          "function error_exit\n",
          "{\n",
          "  cfn-signal -e 1 -r \"$1\" '", { "Ref" : "redisWaitHandle" }, "'\n",
          "  exit 1\n",
          "}\n",

          "# Run Instance default configuration via CloudFormation::Init\n",
          "cfn-init -v --region ", { "Ref" : "AWS::Region" },
          "    -s ", { "Ref" : "AWS::StackId" },
          " -r redisInstance",
          " -c default",
          " || error_exit 'Failed to run cfn-init'\n",

          "# Register Github fingerprints\n",
          "ssh-keygen -f ~/.ssh/known_hosts -H -F github.com | grep -q found || ssh-keyscan -H github.com >> ~/.ssh/known_hosts\n",

          "# Copy credentials to root user\n",
          "cp /home/ubuntu/.ssh/* /root/.ssh/\n",

          "# Clone app repo to ubuntu user home\n",
          "git clone ", {"Ref": "Repository"}, " -b ", {"Ref" : "DeployBranch"}, " /home/ubuntu/redis > /tmp/git.log 2>&1 || error_exit 'Failed to clone repo'\n",
          "chown ubuntu:ubuntu -R /home/ubuntu/redis\n",

          "# Install application's dependencies via puppet\n",
          "sudo apt-get update\n",
          "sudo gem install puppet\n",
          "sudo gem install librarian-puppet\n",
          "cd /home/ubuntu/redis/puppet\n",
          "export HOME=/home/ubuntu && librarian-puppet install --clean --verbose > /tmp/librarian-puppet.log 2>&1 || error_exit 'failed to install puppet submodules'\n",

          "cd /home/ubuntu/redis\n",
          "sudo puppet apply --verbose --modulepath=./puppet/modules ./puppet/manifests/aws-",{"Ref":"Environment"},".pp  > /tmp/puppet.log 2>&1 || error_exit 'failed to apply puppet manifests'\n",

          "# Signal setup is complete\n",
          "cfn-signal -e $? -r 'Completed configuration' '",
          {
            "Ref" : "redisWaitHandle"
          },
          "'\n"
        ]]}}
      }
    },

    "redisWaitHandle" : {
      "Type" : "AWS::CloudFormation::WaitConditionHandle"
    },

    "redisWaitCondition" : {
      "Type" : "AWS::CloudFormation::WaitCondition",
      "DependsOn" : "redisInstance",
      "Properties" : {
        "Handle" : {"Ref" : "redisWaitHandle"},
        "Timeout" : "2000"
      }
    }
  },

  "Outputs" : {
    "InstanceId" : {
      "Value" : { "Ref" : "redisInstance" },
      "Description" : "Instance Id of newly created instance"
    },

    "IPAddress" : {
      "Value" : { "Fn::GetAtt" : [ "redisInstance", "PrivateIp" ] },
      "Description" : "Private IP address of instance"
    },

    "DomainName" : {
      "Value" : { "Ref" : "DNSRecord" }
    }
  }
}